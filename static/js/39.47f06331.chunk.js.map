{"version":3,"file":"static/js/39.47f06331.chunk.js","mappings":"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","sources":["views/Board/CStalk.js"],"sourcesContent":["import { useContext, useState, useEffect, useLayoutEffect } from \"react\"\nimport { styled } from \"styled-components\"\n\nimport moment from \"moment\"\nimport Pagination from \"react-js-pagination\"\n\nimport Header from \"../../components/Header\"\nimport Top from \"../../components/Top\"\nimport SelectBox from '../../components/SelectBox'\nimport Viewer from \"../../components/Viewer\"\nimport MaximalView from \"../Common/MaximalView\"\nimport EditorModify from \"../../components/EditorModify\"\nimport Tab from \"../../components/Tab\"\nimport Alert from \"../../components/Alert\"\n\nimport { axiosInstance2, generateRandomString,downloadAttachment, convertFileSize, fetchInstance } from \"../../utils/CommonFunction\"\n\n// Icons \nimport Search from '../../assets/svgs/icon_seeking.svg'\nimport New from '../../assets/svgs/icon_new.svg'\nimport Attachment from '../../assets/svgs/icon_attachment.svg';\nimport Download from '../../assets/svgs/icon_download.svg'\nimport Like from '../../assets/svgs/icon_like.svg'\nimport Liked from '../../assets/svgs/icon_liked.svg'\nimport Comment from '../../assets/svgs/icon_co_comment.svg'\nimport More_comment from '../../assets/svgs/icon_co_more.svg'\nimport Close_comment from '../../assets/svgs/icon_co_close.svg'\nimport Close from '../../assets/svgs/icon_close2.svg'\nimport Maximize from '../../assets/svgs/icon_screen.svg'\n\nimport {UserContext} from '../../hooks/UserContext'\n\n\nfunction CStalk() {\n\n    /**\n     * 화면 접근 권한\n     * 본사 staff    (LK)  : 전체내용표시\n     * 법인관리자    (SS)  : 소속 법인 내용만 표시\n     * 법인 admin    (SA)  : none\n     * LGC 관리자    (LD)  : 소속 센터 내용만 표시\n     * LGC Engineer  (LE)  : 본인 내용만 표시 \n     * ASC 관리자    (AD)  : 소속 센터 내용만 표시\n     * ASC Engineer  (AE)  : 본인 내용만 표시\n     */\n\n    const user = useContext(UserContext);\n    let now = moment().subtract(24,'hours').format('YYYY-MM-DD HH:mm:ss');\n\n    const [auth, setAuth] = useState({\n      isViewer : false,\n      isWriter : false,\n    })\n\n   \n\n    /** 페이징 관련 ▼ ============================================================= */\n    const [activePage, setActivePage] = useState(1); // 현재 페이지\n    const [itemsPerPage] = useState(16); // 페이지당 아이템 갯수\n\n    const [subsidiary, setSubsidiary ] = useState([\n        {value:'',label:'All'}, \n        {value:'LGEAI',label:'LGEAI'}, \n        {value:'LGECI',label:'LGECI'}, \n        {value:'LGEES',label:'LGEES'}, \n        {value:'LGEJP',label:'LGEJP'}, \n        {value:'LGEKR',label:'LGEKR'},\n        {value:'LGEMC',label:'LGEMC'},\n    ])\n\n    const [maximizing, setMaxmizing] = useState(false)\n    const [isWrite, setIsWrite] = useState(false); // 글 작성시 에디터 on, viewer off\n    \n    const handleSelectSubsidiary = e => {\n        let value = e.value;\n        console.log('value ---->', value);\n        setReqData({\n            ...reqData,\n            subsidiary : value\n        })\n    }\n    const setPage = (e) => {\n        setActivePage(e);\n        console.log('page ---->', e);\n    };\n    useEffect(()=>{\n        setReqData({\n            ...reqData,\n            page: activePage\n        })\n    },[activePage])\n    /** 페이징 관련 ▲ ============================================================= */\n\n    const [boardData, setBoardData] = useState([]);\n\n    const [content, setContent] = useState({\n        title : '',\n        content : '',\n        isPublic : null,\n        attachments : null,\n        csTalkId : ''\n    });\n\n    const [selectedList, setSelectedList] = useState({\n        attachments : '',\n        subject: '',\n        branch : '',\n        center : '',\n        commentCount : 0,\n        content : '',\n        createdAt : '',\n        csTalkId : '',\n        hits : 0,\n        isPublic :  null,\n        likeCount : 0, \n        parentCsId : '',\n        subsidiary : '',\n        writerID : '',\n        reactionState : '',\n        writerName : '',\n    });\n\n    // 유저 정보로 권한 체크 추가\n    useEffect(()=>{\n        console.log(user)\n        let role = user.role;\n        setAuth({\n            ...auth,\n            isViewer : true,\n            isWriter : true\n        })\n        // if(role==='LK') {\n        //   setAuth({\n        //     ...auth,\n        //     isViewer : true\n        //   })\n        // }else if(role==='SA') {\n        //   setAuth({\n        //     ...auth,\n        //     isViewer : true,\n        //     isWriter : selectedList.writerID === user.id ? true : false\n        //   })\n        // }else {\n        //   alert('No right to Access')\n        //   document.location.href='/login';\n        // }\n      },[selectedList.csTalkId])\n\n      const [openRight, setOpenRight] = useState(false);\n\n      \n\n    const centerOptions = [\n        { value: '', label: 'All' },\n        { value: '0', label: 'Me' },\n        { value: '1', label: 'Public' },\n        { value: '2', label: 'Center' },\n    ]\n\n    const handleSelectBox = (event,params) => {\n        console.log('handleSelectBox',event,params)\n        const viewer = event.value;\n\n        setReqData({\n            ...reqData,\n            view : viewer\n        })\n    }\n\n\n    const getDetail = (id) =>{\n\n        setIsFetching(true) \n\n        const formData = new FormData();\n        formData.append('csTalkId', id);\n\n        console.log(Object.fromEntries(formData))\n        var config = {\n            method: 'post',\n            maxBodyLength: Infinity,\n            headers: { \n               'Authorization': 'Bearer ' + process.env.REACT_APP_TEMP_JWT_LGEKR,\n            },\n            data : formData\n            };\n        fetchInstance('/cstalkDetail')\n        .then(function (response){\n            if(response) {\n                // setSelectedList(response)\n                console.log(response,'detail')\n            }else {\n                setAlertSetting({\n                    ...alertSetting,\n                    alertTxt: \"Client Error\"\n                })\n            }\n            setIsFetching(false) \n        })\n        .catch(function(error) {\n            console.log('error',error)\n            setIsFetching(false) \n            setAlertSetting({\n                ...alertSetting,\n                alertTxt: \"Server Error\"\n            })\n        })\n    }\n\n    const [alertModal, setAlertModal] = useState(false)\n    const [alertSetting, setAlertSetting] = useState({\n        alertTxt : '',\n        onConfirm : function() {},\n        isDoubleBtn : false,\n        btnTxt : 'Close',\n        confirmTxt : ''\n    })\n\n    const onConfirmHandler = (num,id) =>{\n\n        console.log(id,'\"btn-row\"')   \n        console.log('onConfirmHandler',isWrite)\n\n        if(num===1 || num===7) {\n           \n            setAlertSetting({\n                ...alertSetting,\n                alertTxt: ' Click confirm to leave write mode.',\n                onConfirm : ()=>{ \n                    setIsWrite(false)\n                    setIsModify(false)\n                    setAlertModal(false)\n                    setContent({\n                        title : '',\n                        content : '',\n                        isPublic : null,\n                        attachments : '',\n                        csTalkId : ''\n                    })\n                    clearState()\n                    num===7 && setIsWrite(false)\n                    num===1 && getDetail(id)\n                },\n                isDoubleBtn : true,\n                btnTxt : 'Confirm',\n                confirmTxt : \"\"\n            })\n                        \n        }\n        // open post to public\n        else if(num===2) {\n            setAlertSetting({\n                ...alertSetting,\n                alertTxt: 'Are you sure to oepn this post to public?',\n                onConfirm : ()=>{ onChangePublic(); setAlertModal(false); clearState() },\n                isDoubleBtn : true,\n                btnTxt : 'Confirm',\n                confirmTxt : \"You've allowed all to show this post.\"\n            })\n            \n        }\n        // delete post\n        else if(num===3) {\n            setAlertSetting({\n                ...alertSetting,\n                alertTxt: 'Are you sure to delete post?',\n                onConfirm :  ()=>{onDeletePost(); setAlertModal(false); clearState(); getList()},\n                isDoubleBtn : true,\n                btnTxt : 'Confirm',\n                confirmTxt : \"Deleted post.\"\n            })\n           \n        }\n        // delete comment\n        else if(num===4) {\n            setAlertSetting({\n                ...alertSetting,\n                alertTxt: 'Are you sure to delete comment?',\n                onConfirm :  ()=>{onDeleteComment(id); setAlertModal(false); },\n                isDoubleBtn : true,\n                btnTxt : 'Confirm',\n                confirmTxt : \"Deleted comment.\"\n            })\n           \n        }\n        // no input data when clicked submit\n        else if(num===5) {\n            setAlertSetting({\n                ...alertSetting,\n                alertTxt: 'Any content input',\n                onConfirm :  ()=>setAlertModal(false),\n                isDoubleBtn : false,\n                btnTxt : 'Close',\n            })\n        }\n        // success alert \n        else if(num===6) {\n            setAlertSetting({\n                ...alertSetting,\n                alertTxt: 'Success',\n                onConfirm :  ()=>{setAlertModal(false); clearState()},\n                isDoubleBtn : false,\n                btnTxt : 'Close',\n            })\n        }\n    }\n\n    const handleClickRow = (e, item) => {\n        console.log('handle clikc edf smflknsdklf', item)\n        setFileStore([])\n        if((isWrite || isModify) && (content.title !== '' || content.content !=='')) {\n            onConfirmHandler(1,item)\n            return false\n        }else {\n            isWrite ? setIsWrite(false) : setIsModify(false)\n            // getDetail(item.csTalkId) // API 연동시 디테일 항목 새로 받아옴\n            setSelectedList(item)\n        }\n    }\n    \n\n    useEffect(()=>{\n        if(!alertModal) {\n           setAlertSetting({\n            alertTxt : '',\n            onConfirm : function() {},\n            isDoubleBtn : false,\n            btnTxt : 'Close',\n            confirmTxt : ''\n           })\n        }\n    },[alertModal])\n    useEffect(()=>{\n        if(alertSetting.alertTxt!==''){\n            setAlertModal(true)\n        }else {\n            setAlertModal(false)\n        }\n    },[alertSetting])\n\n    const onClickAction = (event,id) => {\n        const formData = new FormData();\n        formData.append('csTalkId', id);\n\n        var config = {\n            method: 'post',\n            maxBodyLength: Infinity,\n            headers: { \n               'Authorization': 'Bearer ' + process.env.REACT_APP_TEMP_JWT_LGEKR,\n            },\n            data : formData\n            };\n        axiosInstance2('/csTalk/reaction', config)\n        .then(function (response){\n            let resData = response.data;\n            if(resData.code===200) {\n                let data = resData.result\n                setSelectedList({\n                    ...selectedList,\n                    reactionState : selectedList.reactionState===\"LIKE\"?\"NONE\":\"LIKE\",\n                    likeCount : selectedList.reactionState===\"LIKE\" ? selectedList.likeCount-1 : selectedList.likeCount+1\n                })\n            }else {\n                console.log(resData)\n            }\n        })\n        .catch(function(error) {\n            console.log('error',error)\n        })\n        \n    }\n\n    const [reqData, setReqData] = useState(\n        {\n            page : 1,\n            subsidiary:\"\",\n            view: '',\n            search: \"\",\n        }\n    )\n    const [boardLength, setBoardLength] = useState(0)\n\n    const [isFetching, setIsFetching] = useState(false)\n    const getList = () =>{ \n        setIsFetching(true)\n        const formData = new FormData();\n        \n        for (let key in reqData) {\n            if (reqData.hasOwnProperty(key)) {\n              formData.append(key, reqData[key]);\n            }\n        }\n\n        var config = {\n            method: 'post',\n            maxBodyLength: Infinity,\n            headers: { \n               'Authorization': 'Bearer ' + process.env.REACT_APP_TEMP_JWT_LGEKR,\n            },\n            data : formData\n            };\n        fetchInstance('/cstalkData')\n        .then(function (response){\n            // API 연동시 status객체에 내려오는 코드로 통신확인\n            if(response) {\n                setBoardData(response)\n            }else {\n                console.log(response)\n                setAlertSetting({\n                    ...alertSetting,\n                    alertTxt: \"Client Error\"\n                })\n            }\n        })\n        .catch(function(error) {\n            console.log('error',error)\n            setAlertSetting({\n                ...alertSetting,\n                alertTxt: \"Server Error\"\n            })\n        })\n    }\n    const setPages = (e) => {\n        setCommentPage(e);\n        console.log('page ---->', e);\n    };\n\n    const [commentPage, setCommentPage] = useState(1)\n    const [commentList, setCommentList] = useState([])\n\n    const getComment = () =>{\n        const formData = new FormData();\n        \n        formData.append('page', commentPage);\n        formData.append('csTalkId', selectedList.csTalkId);\n\n        var config = {\n            method: 'post',\n            maxBodyLength: Infinity,\n            headers: { \n               'Authorization': 'Bearer ' + process.env.REACT_APP_TEMP_JWT_LGEKR,\n            },\n            data : formData\n            };\n        axiosInstance2('/csTalk/commentList', config)\n        .then(function (response){\n            let resData = response.data;\n            \n            if(resData.code===200) {\n                let data = resData.result\n                data.map(d=>{\n                    d.openSubComment = false\n                    d.isInput = false\n                }\n                )\n                setCommentList(data)\n                console.log('comment',data)\n            }else {\n                console.log(resData)\n            }\n        })\n        .catch(function(error) {\n            console.log('error',error)\n        })\n    }\n \n    const clearState =()=>{\n        getList();\n        setSelectedList({\n            attachments : '',\n            subject: '',\n            branch : '',\n            center : '',\n            commentCount : 0,\n            content : '',\n            createdAt : '',\n            csTalkId : '',\n            hits : 0,\n            isPublic :  null,\n            likeCount : 0, \n            parentCsId : '',\n            subsidiary : '',\n            writerID : '',\n            reactionState : '',\n            writerName : '',\n        })\n        setIsWrite(false)\n        setIsModify(false)\n    }\n    const openCommentInput = (idx) =>{\n        console.log('openCommentInput')\n        let copylist = [...commentList];\n        for(let i=0; i<copylist.length; i++) {\n            copylist[i].isInput = false;\n        }\n        copylist[idx].isInput = !copylist[idx].isInput\n        setCommentList(copylist)\n    }\n    const openSubcomment = (e,idx,id) =>{\n        let copyList = [...commentList]\n        copyList[idx].openSubComment = !copyList[idx].openSubComment\n        setCommentList(copyList)\n    }\n\n\n    const onSaveContent = () =>{\n\n        console.log(content,'111111111111111111111111111111111111')\n\n        if (content.title==='' || content.content==='' || content.isPublic===null) {\n            \n            setAlertSetting({\n                ...alertSetting,\n                alertTxt : 'Please fill out all the information.',\n                isDoubleBtn : false,\n                btnTxt : 'Close',\n                confirmTxt : ''\n            })\n\n            return false;\n        }\n        else {\n            if(isWrite) {\n                const formData = new FormData();\n                for (let key in content) {\n                    if (content.hasOwnProperty(key)) {\n                      formData.append(key, content[key]);\n                    }\n                }\n        \n                var config = {\n                    method: 'post',\n                    maxBodyLength: Infinity,\n                    headers: { \n                       'Authorization': 'Bearer ' + process.env.REACT_APP_TEMP_JWT_LGEKR,\n                    },\n                    data : formData\n                    };\n                axiosInstance2('/csTalk/insert', config)\n                .then(function (response){\n                    let resData = response.data;\n                    if(resData.code===200) {\n                       setAlertSetting({\n                        ...alertSetting,\n                        alertTxt : \"You've inserted new post.\",\n                        isDoubleBtn : false,\n                        btnTxt : 'Close',\n                        confirmTxt : ''\n                    })\n                       setIsWrite(false)\n                       setContent({\n                        title : selectedList.subject,\n                        content : selectedList.content,\n                        isPublic : selectedList.isPublic,\n                        attachments : selectedList.attachments,\n                        csTalkId : selectedList.csTalkId,\n                       })\n                       getList();\n                       clearState()\n                    }else {\n                        console.log(response,'else')\n                    }\n                })\n                .catch(function(error) {\n                    console.log('error',error)\n                })  \n            }\n        }\n    }\n    const [isModify, setIsModify] = useState(false)\n\n    const onEditMode = () =>{\n        setContent({\n            ...content,\n            title : selectedList.subject,\n            content : selectedList.content,\n            isPublic : selectedList.isPublic,\n            attachments : selectedList.attachments,\n            csTalkId : selectedList.csTalkId,\n        })\n        setIsModify(true)\n    }\n\n    const onEditContent = () =>{\n        if (content.title==='' || content.content==='' || content.isPublic===null) {\n            setAlertSetting({\n                ...alertSetting,\n                alertTxt : \"Please fill out all the information.\",\n                isDoubleBtn : false,\n                btnTxt : 'Close',\n            })\n            return false;\n        }\n        else {\n            if(isModify) {\n\n                console.log('content : ',content)\n                const formData = new FormData();\n                for (let key in content) {\n                    if (content.hasOwnProperty(key)) {\n                      formData.append(key, content[key]);\n                    }\n                }\n        \n                var config = {\n                    method: 'post',\n                    maxBodyLength: Infinity,\n                    headers: { \n                       'Authorization': 'Bearer ' + process.env.REACT_APP_TEMP_JWT_LGEKR,\n                    },\n                    data : formData\n                    };\n                axiosInstance2('/csTalk/update', config)\n                .then(function (response){\n                    let resData = response.data;\n                    if(resData.code===200) {\n                       setAlertSetting({\n                            ...alertSetting,\n                            alertTxt : \"You've modified your post.\",\n                            isDoubleBtn : false,\n                            btnTxt : 'Close',\n                        })\n\n                       setIsModify(false)\n                       setContent({\n                        title : selectedList.subject,\n                        content : selectedList.content,\n                        isPublic : selectedList.isPublic,\n                        attachments : selectedList.attachments,\n                        csTalkId : selectedList.csTalkId,\n                       })\n                       getList();\n                       getDetail(content.csTalkId);\n                    }else {\n                        console.log(resData,'resData')\n                    }\n                })\n                .catch(function(error) {\n                    console.log('error',error)\n                })  \n            }\n        }\n    }\n\n    const onAddAnswer = () =>{\n        setContent({\n            ...content,\n            csTalkId : selectedList.csTalkId\n        })\n        setIsWrite(true)\n    }\n\n    const [comment, setComment] = useState('') \n    const [subComment, setSubComment] = useState('')  \n\n    const onAddComment =(num, id) => {\n        // num = 1 댓글, num = 2 대댓글\n        console.log('onAddComment',num,id)\n        if(num===1 && comment==='') {\n            onConfirmHandler(5)\n            return false\n        }else if(num===2 &&subComment==='') {\n            onConfirmHandler(5)\n            return false\n        }\n\n        const formData = new FormData();\n\n        formData.append('csTalkId', selectedList.csTalkId);\n        if(num===1) {\n            formData.append('content', comment);\n        }\n        if(num===2) {\n            formData.append('commentId', id);\n            formData.append('content', subComment);\n        }\n            var config = {\n                method: 'post',\n                maxBodyLength: Infinity,\n                headers: { \n                    'Authorization': 'Bearer ' + process.env.REACT_APP_TEMP_JWT_LGEKR,\n                },\n                data : formData\n                };\n            axiosInstance2('/csTalk/commentInsert', config)\n            .then(function (response){\n                let resData = response.data;\n                if(resData.code===200) {\n                    // onConfirmHandler(6)\n                    num === 1 ? setComment('') : setSubComment('')\n                }else {\n                    console.log(resData,'comment list')\n                }\n            })\n            .catch(function(error) {\n                console.log('error',error)\n            })  \n    }\n\n    useEffect(()=>{\n       \n        if(selectedList && comment==='') {\n            getList();\n            getDetail(selectedList.csTalkIdid);\n            setSelectedList({\n                ...selectedList,\n                commentCount : selectedList.commentCount+1\n            })\n            getComment()\n            \n        }\n    },[comment]) \n\n    useEffect(()=>{\n        console.log('content',content)\n    },[content])\n\n    const onDeleteComment = (id) =>{\n        // num = 1 댓글, num = 2 대댓글\n        const formData = new FormData();\n\n        formData.append('commentId', id);\n        var config = {\n            method: 'post',\n            maxBodyLength: Infinity,\n            headers: { \n                'Authorization': 'Bearer ' + process.env.REACT_APP_TEMP_JWT_LGEKR,\n            },\n            data : formData\n            };\n        axiosInstance2('/csTalk/commentDelete', config)\n        .then(function (response){\n            let resData = response.data;\n            if(resData.code===200) {\n                setAlertSetting({\n                    ...alertSetting,\n                    alertTxt : \"You've deleted comment.\",\n                    isDoubleBtn : false,\n                    btnTxt : 'Close',\n                })\n                getDetail(id);\n                getComment()\n                getList()\n            }else {\n                console.log(resData,'resData')\n            }\n        })\n        .catch(function(error) {\n            console.log('error',error)\n        })                  \n    }\n    const onDeletePost = () => {\n\n       \n        const formData = new FormData();\n        \n        formData.append('csTalkId',selectedList.csTalkId)\n        console.log(Object.fromEntries(formData),'on delete post')\n        var config = {\n            method: 'post',\n            maxBodyLength: Infinity,\n            headers: { \n               'Authorization': 'Bearer ' + process.env.REACT_APP_TEMP_JWT_LGEKR,\n            },\n            data : formData\n            };\n        axiosInstance2('/csTalk/delete', config)\n        .then(function (response){\n            let resData = response.data;\n            if(resData.code===200) {\n                setAlertSetting({\n                    ...alertSetting,\n                    alertTxt : \"You've Deleted post.\",\n                    isDoubleBtn : false,\n                    btnTxt : 'Close',\n                })\n                setBoardLength(boardLength-1)\n                getList()\n            }else {\n                console.log(resData)\n            }\n        })\n        .catch(function(error) {\n            console.log('error',error)\n        })\n    }\n    \n    const onChangePublic = () =>{\n        const formData = new FormData();\n        \n        let id = selectedList.csTalkId\n        formData.append('csTalkId',id)\n\n        var config = {\n            method: 'post',\n            maxBodyLength: Infinity,\n            headers: { \n               'Authorization': 'Bearer ' + process.env.REACT_APP_TEMP_JWT_LGEKR,\n            },\n            data : formData\n            };\n        axiosInstance2('/csTalk/public', config)\n        .then(function (response){\n            let resData = response.data;\n            if(resData.code===200) {\n                setAlertSetting({\n                    ...alertSetting,\n                    alertTxt : \"You've changed open status for this post to all.\",\n                    isDoubleBtn : false,\n                    btnTxt : 'Close',\n                })\n\n                getDetail(id)\n            }else {\n                console.log(resData)\n            }\n        })\n        .catch(function(error) {\n            console.log('error',error)\n        })\n    }\n\n    \n    useLayoutEffect(()=>{\n        getList();   \n    },[reqData.page])\n\n   \n    useEffect(()=>{\n       if(boardData.length===0) {\n            setBoardLength(0)\n       }\n       else {\n        let max = boardLength;\n        if(reqData.page===1) {\n         max = 0\n         console.log('ms',max)\n         boardData.map((item) =>{\n             if(item.rn>max) {\n                 console.log(item.rn)\n                 max = item.rn;\n             }\n             setBoardLength(max)\n          })\n        }\n       }\n    },[boardData])\n\n \n\n    const [fileStore, setFileStore] = useState([])\n\n    \n\n    /** loading 시 animation */\n    const [isLoading, setIsLoading] = useState(false)\n    const [isLoadingComment, setIsLoadingComment] = useState(false)\n    \n    // useEffect(()=>{\n    //     setComment('');\n    //     setCommentPage(1)\n\n    //     setFileStore([])\n    //     if(selectedList?.attachments!=='') {\n          \n    //         const jsonString = JSON.parse(selectedList.attachments);\n    //         if(jsonString!==null) {\n    //             let copy = [...jsonString]\n    //             setFileStore(copy)\n    //         }\n    //     }\n    //     if(selectedList) {\n    //         setIsLoading(true)\n    //         getComment();\n    //         const timeoutId = setTimeout(() => {\n    //             setIsLoading(false);\n    //           }, 500); // 3초 후에 isVisible 값을 false로 변경\n          \n    //           return () => clearTimeout(timeoutId) \n    //     }\n       \n       \n    // },[selectedList.csTalkId])\n\n    useEffect(()=>{\n        console.log('file', fileStore[0]?.fileName)\n    },[fileStore])\n    useEffect(()=>{\n        \n        getComment()\n        setIsLoadingComment(true)\n        const timeoutId = setTimeout(() => {\n            setIsLoadingComment(false);\n            }, 500); // 3초 후에 isVisible 값을 false로 변경\n        \n            return () => clearTimeout(timeoutId)\n    },[commentPage]) \n\n    useEffect(()=>{\n        if(selectedList.csTalkId!=='' || isWrite || isModify) {\n            // if(selectedList.csTalkId!=='' || openCategory || openFaqCreator) {\n            setOpenRight(true)\n        }else {\n            setOpenRight(false)\n        }\n      },[selectedList.csTalkId,isWrite,isModify])\n\n      useEffect(()=>{\n        console.log('selected item--->', selectedList)\n      },[selectedList])\n    useEffect(()=>{\n        if(isWrite) {\n            setSelectedList({\n                attachments : '',\n                subject: '',\n                branch : '',\n                center : '',\n                commentCount : 0,\n                content : '',\n                createdAt : '',\n                csTalkId : '',\n                hits : 0,\n                isPublic :  null,\n                likeCount : 0, \n                parentCsId : '',\n                subsidiary : '',\n                writerID : '',\n                reactionState : '',\n                writerName : '',\n            })\n        }\n    },[isWrite])\n    \n\n    return (\n        <Style openright={openRight} iswrite={isWrite || isModify}>\n        <div className=\"notice-container cstalk-container\">\n        <div className=\"inner-container\">\n            {/** auth 권한체크로 수정 필요 */}\n            <Top searchArea={true} auth={auth.isWriter} options={subsidiary} handleChange={handleSelectBox} onChange={(e)=>setReqData({...reqData, search:e.target.value})} onClick={getList}/>\n            {/** Search Nav */}\n            <div>\n            {/** Content Area */}\n            <div className=\"cstalk-contents \">\n                <div className=\"cstalk-left\">\n                <div className=\"cstalk-count\">\n                        Total <span className=\"custom-stress-txt\">{boardLength}</span>\n                    </div>\n                    <div className=\"board-menu\">\n                        <span className=\"col-1\" style={selectedList?.csTalkId ? {width: \"10%\"} : null}>No.</span>\n                        <span className=\"col-3\">Title</span>\n                        <span className={`col-4 ${openRight ? 'custom-hide-item' : ''}`}>Writer</span>\n                        <span className={`col-5 ${openRight ? 'custom-hide-item' : ''}`}>Recommand</span>\n                        <span className=\"col-6\" style={selectedList?.csTalkId ? {width: \"15%\"} : null}>Count</span>\n                        <span className=\"col-7\" style={selectedList?.csTalkId ? {width: \"15%\"} : null}>Date</span>\n                    </div>\n\n                    <div>\n                    {\n                            boardData.length !== 0\n                            ? boardData.length > 0 && boardData.map((item,idx)=>{\n                                console.log(item.cstalkId)\n                                return(\n                                   <div className={`board-list custom-flex-item custom-align-item cursor-btn ${selectedList.cstalkId===item.cstalkId ?'hover-selected':''}`} key={generateRandomString(idx)} onClick={(e)=>handleClickRow(e,item)} >\n                                        <ul className=\"col-1\" style={selectedList?.cstalkId ? {width: \"10%\"} : null}>\n                                            <li  id={`list-item-${idx+1}`}>\n                                                <span>{String((activePage-1)*16+(idx+1)).padStart(3, '0')}</span>\n                                            </li>\n                                        </ul>\n                                       \n                                        <ul className=\"col-3\" >\n                                            <li id={`list-item-${idx+1}`}>\n                                                <span className=\"board-max-length\">{!openRight ? item?.subject.slice(0,82) : item?.subject.slice(0,60)}{!openRight ? item.subject?.length > 82 && '...' : item.subject?.length >60 && '...'}</span><img src={moment(item?.createdAt).format('YYYY-MM-DD HH:mm:ss') > now ? New : null} />\n                                                {\n                                                    item.commentCount!==0\n                                                    &&\n                                                    <span className=\"custom-stress-txt\">{`(${item.commentCount})`}</span>\n                                                }\n                                                \n                                            </li>\n                                        </ul>\n                                        <ul className={`col-4 ${openRight && 'custom-hide-item'}`}>\n                                            <li  id={`list-item-${idx+1}`}>\n                                                <span>{item?.writerName?.slice(0,10)}{item?.writerName.length >= 10 && '...'}</span>\n                                            </li>\n                                        </ul>\n                                        <ul className={`col-5 ${openRight && 'custom-hide-item'}`}>\n                                            <li  id={`list-item-${idx+1}`}>\n                                                <img src={Like} alt=\"like-img\"/><span>{item?.likeCount}</span>\n                                            </li>\n                                        </ul>\n                                        <ul className=\"col-6\" style={selectedList?.csTalkId ? {width: \"15%\"} : null}>\n                                            <li  id={`list-item-${idx+1}`}>\n                                                <span>{item?.hits}</span>\n                                            </li>\n                                        </ul>\n                                        <ul className=\"col-7\" style={selectedList?.csTalkId ? {width: \"15%\"} : null}>\n                                            <li  id={`list-item-${idx+1}`}>\n                                                <span>{moment(item?.createdAt).format('MM.DD.YY')}</span>\n                                            </li>\n                                        </ul>\n                                   </div>\n                                )\n                            })\n                            :\n                            <div className=\"no-data\">no data</div>\n                        }\n\n                    </div>\n                    {\n                        boardData &&\n                        <Pagination \n                            activePage={activePage} // 현재 페이지\n                            itemsCountPerPage={itemsPerPage} // 한 페이지 당 보여줄 아이템 수\n                            totalItemsCount={boardLength} // 총 아이템 수\n                            pageRangeDisplayed={5} // paginator의 페이지 범위\n                            prevPageText={\"‹\"} // \"이전\"을 나타낼 텍스트\n                            nextPageText={\"›\"} // \"다음\"을 나타낼 텍스트\n                            onChange={setPage} // 페이지 변경을 핸들링하는 함수\n                            hideFirstLastPages={true}\n                        />\n                    }\n                    <div className=\"write-btn\" onClick={()=> !isWrite ? setIsWrite(true) : isModify ? onConfirmHandler(7,selectedList.csTalkId) : isWrite ? onConfirmHandler(1):null}><span>Write</span></div>\n                </div>\n                {\n                    isWrite\n                    ?\n                    <div className=\"editor-wrapper\">\n                    <EditorModify data={content} isWriter={isWrite} setData={setContent} onSave={onSaveContent} onClose={()=>(content.title !=='' || content.content !=='')? onConfirmHandler(1) : (setIsWrite(false), setOpenRight(false))} range />\n                    </div>\n                    :\n                    !isWrite && selectedList.csTalkId!=='' && !isModify\n                    ?\n                    // <div className=\"editor-wrapper\">\n                    <div className={`cstalk-right custom-flex-item ${isLoading ? 'loadingOpacity':''}`}>\n                    \n                    <div className=\"board-view-top\">\n                            <div className=\"board-btn-area custom-flex-item custom-align-item custom-justify-between\">\n                            <button className=\"board-minimize-btn\" onClick={()=>{setMaxmizing(true)}}>\n                                <img src={Maximize} alt=\"minimize-btn\" className=\"screen-icon\"/> Full Screen\n                            </button> \n                            <img src={Close} alt=\"close-btn\" onClick={clearState} />\n                        </div>\n                        <p className=\"board-title\">{selectedList.subject}</p>\n                        <p className=\"board-title-detail\">\n                            <span>Writer</span> : {selectedList.writerName} &nbsp;\n                            <span>Date</span> : {moment(selectedList.createdAt).format(`'DD.MM.YY`)}\n                        </p>\n                        <div className=\"board-title-attach\">\n                            <span className=\"custom-flex-item custom-align-item\">\n                                <div className=\"custom-flex-item custom-align-item custom-flex-wrap\">\n                                {\n                                    fileStore.length!==0 &&\n                                    fileStore.map((file,idx)=>{\n                                        return(\n                                            <span className=\"board-attach-box\" key={generateRandomString(idx)} onClick={()=>downloadAttachment(file.uploadPath)}> \n                                                <img src={Attachment} alt=\"attachment\" className=\"attach-icon\"/>\n                                                <p>{`${file.fileName} ${file?.fileSize ? `(${convertFileSize(file.fileSize)})` : ''}`}</p>\n                                                <span className=\"board-attach-down\" onClick={() => downloadAttachment(file.uploadPath)}> \n                                                <img src={Download} alt=\"attachment-download\"/> </span>\n                                            </span>\n                                        )\n                                    })\n                                }  \n                                </div>\n                            </span>\n                        </div>\n                    </div>\n\n                    <div className=\"board-view-middle\">\n\n                    <div className=\"cstalk-right-middle\">\n                       <div className=\"ck-viewer\"> <Viewer content={selectedList.content}/></div>\n                        <div className=\"setting-viewer custom-flex-item\">\n                            { \n                                selectedList.writerID===user.id\n                                &&\n                                <div style={{marginRight:'auto'}}><button onClick={()=>onConfirmHandler(3)} className=\"custom-flex-item custom-align-item \">Delete</button></div>\n                            }\n                            {\n                               ( selectedList.isPublic !== 1 && user.subsidiary==='LGEKR' ) &&\n                                <div><button className=\"custom-flex-item custom-align-item\" onClick={()=>onConfirmHandler(2)}>Allow Views</button></div>\n                            }\n                            {\n                                selectedList.writerID===user.id\n                                &&\n                                <div><button className=\"custom-flex-item custom-align-item\" onClick={onEditMode}>Modify</button></div>\n                            }\n                           {\n                            selectedList.writerID!==user.id &&\n                            <div><button className=\"custom-flex-item custom-align-item\" onClick={onAddAnswer}>Answer</button></div>\n                           }\n                        </div>\n                    </div>\n                    <div className=\"cstalk-right-bottom\">\n                    <div className=\"user-action custom-flex-item \">\n                            <span className=\"cstalk-like custom-flex-item \" onClick={(e)=>onClickAction(e,selectedList.csTalkId)}><img src={selectedList.reactionState!=='NONE'?Liked : Like} alt=\"btn_like\" className=\"cursor-btn\"/><p>{selectedList.likeCount}</p></span>   \n                        </div> \n                        <div className=\"cstalk-comment-wrapper\">\n                        <span>Comments</span><span className=\"comment-cnt-title\">total <p className=\"custom-stress-txt comment-cnt\">{selectedList?.commentCount}</p></span>\n                            <div className=\"custom-justify-between\">\n                                <div className=\"comment-input\">\n                                    <span>Writer : {user.name}</span>\n                                    <textarea value={comment} onChange={(e)=>setComment(e.target.value)}/>\n                                </div>\n                                <button onClick={()=>onAddComment(1)}>Write</button>\n                            </div>\n                        </div>\n                        \n                        <div className=\"cstalk-comment-list\">\n                            <ul>\n                                {\n                                    commentList?.map((comment,idx)=>{\n                                        return(\n                                            <li key={generateRandomString(idx)}>\n                                                <div className=\"comment-top custom-flex-item custom-justify-between\">\n                                                    <div>\n                                                        <span>{comment.writerName}</span>\n                                                        <span>{moment(comment.createdAt).format('MM.DD.YY')}</span>\n                                                    </div>\n                                                    <span className=\"custom-flex-item\">\n                                                        {\n                                                            comment.writerID===user.id &&\n                                                            <p className=\"cursor-btn comment-btn\" onClick={()=>onConfirmHandler(4,comment.commentId)}>Delete</p>\n                                                        }\n                                                         <p className=\"cursor-btn comment-btn\" onClick={()=>{openCommentInput(idx); setSubComment('')}}>Answer</p>\n                                                    </span>\n                                                </div>\n                                                <div className=\"comment-middle\">{comment.content?.slice(0,250)}{comment.content?.length>250 && <span className=\"custom-stress-txt\">...More</span>}</div>\n                                                <div className={comment.openSubComment ? \"comment-bottom\" : \"comment-bottom \"}>\n                                                        \n\n                                                            {\n                                                                comment.subComment.length!==0 &&\n                                                                <div className=\"custom-flex-item cursor-btn\" onClick={(e)=>openSubcomment(e,idx,comment.csTalkId)}>\n                                                                <img src={Comment} alt=\"under-comment\" />\n                                                                <span>Comment</span>\n                                                                <span className=\"custom-stress-txt\">( {comment.subComment.length} ) </span>\n                                                                <img src={comment.openSubComment ? Close_comment : More_comment} alt=\"under-comment\" className=\"toggle-sub-btn\"/>\n                                                                </div>\n                                                            }\n                                                            {\n                                                                comment.openSubComment \n                                                                ?\n                                                                <div >\n                                                                    <ul className=\"submment-wrapper\">\n                                                                       {\n                                                                         comment.subComment.map((sub,idx)=>{\n                                                                            return(\n                                                                                <li>\n                                                                                    <div className=\"comment-top custom-flex-item custom-justify-between\">\n                                                                                        <div>\n                                                                                            <span>{sub.writerName}</span>\n                                                                                            <span>{moment(sub.createdAt).format('YYYY-MM-DD')}</span>\n                                                                                        </div>\n                                                                                        <span className=\"custom-flex-item cursor-btn\">\n                                                                                            {sub.writerID===user.id && <p onClick={()=>onConfirmHandler(4,sub.commentId)}>Delete</p>}\n                                                                                            {/* <p>Answer</p> */}\n                                                                                        </span>\n                                                                                    </div>\n                                                                                    <div className=\"comment-middle\">{sub.content?.slice(0,250)}{sub.content?.length>250 && <span className=\"custom-stress-txt\">...More</span>}</div>\n                                                                                </li>\n                                                                            )\n                                                                         })\n                                                                       }\n                                                                    </ul>\n                                                                </div>\n                                                                :\n                                                                null\n                                                            }\n                                                            {\n                                                                comment.isInput &&\n                                                                <div className=\"cstalk-comment-wrapper sub-comment-wrapper\">\n                                                                <div className=\"custom-justify-between\">\n                                                                    <div className=\"comment-input\">\n                                                                        <span>Writer : {user.name}</span>\n                                                                        {/* <textarea value={subComment} onChange={(e)=>console.log(e.target.value)}/> */}\n                                                                        <textarea defaultValue={subComment} onBlur={(e)=>setSubComment(e.target.value)} id={`sub-${comment.commentId}-${idx}`}  />\n                                                                    </div>\n                                                                    <button onClick={()=>onAddComment(2, comment.commentId)}>Write</button>\n                                                                </div>\n                                                                </div>\n                                                         }\n                                                        {/* ) */}\n                                                    {/* })} */}\n                                                </div>\n                                            </li>\n                                        )\n                                    })\n                                }\n                            </ul>\n                            {\n                                commentList.length!==0 &&\n                                <Pagination \n                                activePage={commentPage} // 현재 페이지\n                                itemsCountPerPage={5} // 한 페이지 당 보여줄 아이템 수\n                                totalItemsCount={selectedList ? selectedList.commentCount : 0} // 총 아이템 수\n                                pageRangeDisplayed={5} // paginator의 페이지 범위\n                                prevPageText={\"‹\"} // \"이전\"을 나타낼 텍스트\n                                nextPageText={\"›\"} // \"다음\"을 나타낼 텍스트\n                                onChange={setPages} // 페이지 변경을 핸들링하는 함수\n                                hideFirstLastPages={true}\n                                />\n                            }\n                        </div>\n                    </div>\n                    \n                    </div>\n                </div>\n                    // {/* </div> */}\n                    :\n                    isModify\n                    ?\n                    <EditorModify data={content} setData={setContent} range onSave={onEditContent}  onClose={()=>(content.title !=='' || content.content !=='')? onConfirmHandler(1) : setIsModify(false)} onDelete={()=>onConfirmHandler(3)} key={selectedList.csTalkId}/>\n                    :\n                    null\n                }\n            </div>\n            {\n                maximizing \n                &&\n                <MaximalView data={selectedList} onClose={()=>(setMaxmizing(false), clearState())} onMinimizing={()=>setMaxmizing(false)}/>\n            }\n            {\n                alertModal\n                &&\n                <Alert alertTxt={alertSetting.alertTxt} onClose={()=>setAlertModal(false)} onConfirm={alertSetting.onConfirm} twoBtn={alertSetting.isDoubleBtn} btnTxt={alertSetting.btnTxt}/>\n            }\n            </div>\n        </div>\n        </div>\n        </Style>\n    )\n}\n\nexport default CStalk\n\nconst Style = styled.div`\n    .cstalk-left {\n        width: ${props => (props.openright ? '49%' : '100%')} !important; \n    }\n    .cstalk-left .cstalk-custom-board li {\n        padding : ${props => (props.openright ? '10px 0px;':'17px 0px')}\n    }\n\n    .board-list {\n        padding : ${props => (props.openright ? '10px 0px;':'10px 0px;')}\n     \n    }\n    .cstalk-contents{\n        .editor-border {\n            overflow: ${props => (props.iswrite ? 'auto':'hidden !important;')}\n        }\n        .cstalk-editor {\n          overflow: auto;\n        max-height: 812px;\n        }\n    \n        .cstalk-editor::-webkit-scrollbar {\n            width: 8px;\n          }\n          \n          .cstalk-editor::-webkit-scrollbar-thumb {\n            background-color: #888;\n            border-radius: 4px;\n          }\n          \n          .cstalk-editor::-webkit-scrollbar-track {\n            background-color: #f1f1f1;\n          }  \n          \n    }\n`\n"],"names":["user","useContext","UserContext","now","moment","subtract","format","_useState","useState","isViewer","isWriter","_useState2","_slicedToArray","auth","setAuth","_useState3","_useState4","activePage","setActivePage","_useState5","itemsPerPage","_useState7","value","label","_useState8","subsidiary","_useState9","_useState10","maximizing","setMaxmizing","_useState11","_useState12","isWrite","setIsWrite","useEffect","setReqData","_objectSpread","reqData","page","_useState13","_useState14","boardData","setBoardData","_useState15","title","content","isPublic","attachments","csTalkId","_useState16","setContent","_useState17","subject","branch","center","commentCount","createdAt","hits","likeCount","parentCsId","writerID","reactionState","writerName","_useState18","selectedList","setSelectedList","console","log","role","_useState19","_useState20","openRight","setOpenRight","getDetail","id","setIsFetching","formData","FormData","append","Object","fromEntries","fetchInstance","then","response","setAlertSetting","alertSetting","alertTxt","catch","error","_useState21","_useState22","alertModal","setAlertModal","_useState23","onConfirm","isDoubleBtn","btnTxt","confirmTxt","_useState24","onConfirmHandler","num","setIsModify","clearState","onChangePublic","onDeletePost","getList","onDeleteComment","_useState25","view","search","_useState26","_useState27","_useState28","boardLength","setBoardLength","_useState29","_useState30","key","hasOwnProperty","_useState31","_useState32","commentPage","setCommentPage","_useState33","_useState34","commentList","setCommentList","getComment","config","method","maxBodyLength","Infinity","headers","process","REACT_APP_TEMP_JWT_LGEKR","data","axiosInstance2","resData","code","result","map","d","openSubComment","isInput","_useState35","_useState36","isModify","_useState37","_useState38","comment","setComment","_useState39","_useState40","subComment","setSubComment","onAddComment","csTalkIdid","useLayoutEffect","length","max","item","rn","_useState41","_useState42","fileStore","setFileStore","_useState43","_useState44","isLoading","_useState45","_useState46","setIsLoadingComment","_fileStore$","fileName","timeoutId","setTimeout","clearTimeout","_jsx","Style","openright","iswrite","children","className","_jsxs","Top","searchArea","options","handleChange","event","params","viewer","onChange","e","target","onClick","style","width","concat","idx","_item$subject","_item$subject2","_item$writerName","cstalkId","handleClickRow","String","padStart","slice","src","New","Like","alt","generateRandomString","Pagination","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","prevPageText","nextPageText","hideFirstLastPages","EditorModify","setData","onSave","onClose","range","onDelete","Maximize","Close","file","downloadAttachment","uploadPath","Attachment","fileSize","convertFileSize","Download","Viewer","marginRight","onClickAction","Liked","name","_comment$content","_comment$content2","commentId","copylist","_toConsumableArray","i","openCommentInput","copyList","openSubcomment","Comment","Close_comment","More_comment","sub","_sub$content","_sub$content2","defaultValue","onBlur","MaximalView","onMinimizing","Alert","twoBtn","styled","div","_templateObject","_taggedTemplateLiteral","props"],"sourceRoot":""}