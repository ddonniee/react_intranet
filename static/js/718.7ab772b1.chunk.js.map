{"version":3,"file":"static/js/718.7ab772b1.chunk.js","mappings":"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","sources":["components/Loading.js","views/Process&Support/Faq.js"],"sourcesContent":["import React from \"react\";\nimport Spinner from '../assets/gif/Spin-1s-200px.gif'\nimport { styled } from \"styled-components\";\n\nconst Loading = () =>{\n    return(\n        <Style>\n        <div className=\"loading-wrapper custom-align-item custom-flex-item custom-justify-center\">\n            <img src={Spinner} alt=\"loading\"/>\n        </div>\n        </Style>\n    )\n}\nexport default Loading;\n\nconst Style = styled.div`\n    .loading-wrapper {\n        height : 100%;\n        img {\n            width : 30px; height : 30px;\n        }\n    }\n`\n","import React,{ Fragment, useContext, useEffect, useRef, useState } from \"react\"\nimport { styled } from \"styled-components\";\n\nimport { UserContext } from \"../../hooks/UserContext\"\nimport Pagination from \"react-js-pagination\";\n// Components\nimport Top from \"../../components/Top\"\nimport Warning from \"../../components/Warning\"\nimport Viewer from \"../../components/Viewer\"\nimport Alert from \"../../components/Alert\";\nimport Tab from \"../../components/Tab\";\nimport Loading from \"../../components/Loading\";\n// Utils\nimport { generateRandomString,fetchInstance,} from \"../../utils/CommonFunction\"\n// View\nimport MaximalView from \"../Common/MaximalView\";\n// Icons \nimport Polygon from '../../assets/svgs/icon_polygon.svg'\nimport New from '../../assets/svgs/icon_new.svg'\nimport Attachment from '../../assets/svgs/icon_attachment.svg';\nimport Download from '../../assets/svgs/icon_download.svg'\nimport Like from '../../assets/svgs/icon_like.svg'\nimport Liked from '../../assets/svgs/icon_liked.svg'\nimport Dislike from '../../assets/svgs/icon_dislike.svg'\nimport Disliked from '../../assets/svgs/icon_disliked.svg'\nimport Comment from '../../assets/svgs/icon_co_comment.svg'\nimport More_comment from '../../assets/svgs/icon_co_more.svg'\nimport Close_comment from '../../assets/svgs/icon_co_close.svg'\nimport Close from '../../assets/svgs/icon_close2.svg'\nimport Maximize from '../../assets/svgs/icon_screen.svg'\n\n\nimport moment from \"moment\";\n\nfunction Faq() {\n\n    let auth = 1;\n    const user = useContext(UserContext)\n    let now = moment().subtract(24,'hours').format('YYYY-MM-DD HH:mm:ss');\n\n     /** 페이징 관련 ▼ ============================================================= */\n     const [activePage, setActivePage] = useState(1); // 현재 페이지\n     const [itemsPerPage] = useState(16); // 페이지당 아이템 갯수\n     const setPage = (e,num) => {\n        if(num===1) {\n            setActivePage(e);\n        }else {\n            setCommentPage(e)\n        }\n     };\n    /** 페이징 관련 ▲ ============================================================= */\n\n    const [boardLength, setBoardLength] = useState(0)\n    const [boardData, setBoardData] = useState([])\n    const [frequentList, setFrequentList] = useState([])\n    const [isFrequent, setIsFrequent] = useState(false)\n    const [selectedList, setSelectedList] = useState({\n        attachments: '',\n        reactionState: \"\",\n        subject: \"\",\n        dislikeCount: 0,\n        likeCount: 0,\n        content: '',\n        subsidiary:'',\n        writerName:'',\n        commentCount : 0,\n        hits: 0,\n        createdAt: '',\n        faqId: '',\n        categoryId: '',\n        writerID: ''\n    })\n    const [openRight, setOpenRight] = useState(false);       // 상세페이지, 작성페이지 open 관리 state\n    const clearState =()=> {\n        setSelectedList({\n            attachments: '',\n            reactionState: \"\",\n            subject: \"\",\n            dislikeCount: 0,\n            likeCount: 0,\n            content: '',\n            subsidiary:'',\n            writerName:'',\n            commentCount : 0,\n            hits: 16,\n            createdAt: '',\n            faqId: '',\n            categoryId: '',\n            writerID: ''\n           })\n    }\n\n    /** 공통 요청폼 ▼ ============================================================= */\n    const [reqData, setReqData] = useState({\n        categoryId: '',\n        subsidiary: '',\n        search : '',\n        type : 'F',\n        page : activePage, // page 전달\n        tab : '',\n    })\n    // 공통헤더\n    var config = {\n        method: 'GET',\n        maxBodyLength: Infinity,\n        headers: { \n        //    'Authorization': 'Bearer ' + process.env.REACT_APP_TEMP_JWT_LGEKR,\n        // 'Content-Type': 'multipart/form-data'\n        },\n        data : null\n    };\n\n    /** 공통 요청폼 ▲ ============================================================= */\n\n    const onClickAction = (e,id,reaction) => {\n        const formData = new FormData();\n\n        let yourReaction = reaction==='LIKE' ? 'likeCount' : 'dislikeCount'\n        let oppositeReaction = reaction === 'LIKE' ? 'dislikeCount' : 'likeCount'\n\n        formData.append('faqId', id);\n        formData.append('reaction',reaction )\n\n        config.data = formData\n        fetchInstance('/faqData', config)\n        .then(function (response){\n            let resData = response.data;\n            if(resData) {\n                let data = resData.result\n                setSelectedList({\n                    ...selectedList,\n                    reactionState : selectedList.reactionState === reaction ? \"NONE\" : reaction,\n                    [yourReaction] : selectedList.reactionState === reaction ? selectedList[yourReaction]-1\n                                   : selectedList[yourReaction]+1 ,\n                    [oppositeReaction] : (selectedList.reactionState !== 'NONE' && selectedList.reactionState !== reaction) \n                                        ? selectedList[oppositeReaction]-1 \n                                        : selectedList[oppositeReaction]\n                                        \n                })\n            }else {\n                console.log(resData)\n            }\n        })\n        .catch(function(error) {\n            console.log('error',error)\n        })\n    }\n\n\n    const handleSelectBox = e => {\n        let value = e.value;\n        setReqData({\n            ...reqData,\n            subsidiary : value\n        })\n    }\n    // faq list 클릭시 상세 항목 읽어오기\n    const handleClickRow = (e,item) => {\n        console.log('handleCLick',item.faqId)\n        getDetail(item.faqId)\n      \n    }\n\n     // 1차 아이콘 클릭시 탭 생성\n     const handleClickIcon = (e, selectedItem) => {\n        // 상세보기창 열려있을시 초기화\n        if(openRight) {\n            clearState('all')\n        }\n\n        if(reqData.categoryId===selectedItem.categoryId) {\n            setReqData({\n                ...reqData,\n                categoryId : '',\n                search: ''\n            })\n        }else {\n            setReqData({\n                ...reqData,\n                categoryId : selectedItem.categoryId\n            })\n        }\n        \n        }\n\n       \n    const [alertModal, setAlertModal] = useState(false)\n    const [alertSetting, setAlertSetting] = useState({\n        alertTxt : '',\n        onConfirm : function() {},\n        isDoubleBtn : false,\n        btnTxt : 'Close',\n        confirmTxt : ''\n    })\n\n    /** 알림창 ▲ ============================================================= */\n\n    const onConfirmHandler = (sorting,id) =>{\n\n        // delete comment\n        if(sorting==='del-comment') {\n            setAlertSetting({\n                ...alertSetting,\n                alertTxt: 'Are you sure to delete comment?',\n                onConfirm :  ()=>{onDeleteComment(id); setAlertModal(false); },\n                isDoubleBtn : true,\n                btnTxt : 'Confirm',\n                confirmTxt : \"Deleted comment.\"\n            })\n           \n        }\n        // no input data \n        else if(sorting==='no-input') {\n            setAlertSetting({\n                ...alertSetting,\n                alertTxt: 'Any content input',\n                onConfirm :  ()=>setAlertModal(false),\n                isDoubleBtn : false,\n                btnTxt : 'Close',\n            })\n        }\n    }\n\n    const [isFetching, setIsFetching] = useState(false);\n\n    const getList = () =>{\n\n        setIsFetching(true)\n        if(reqData.search!=='') {   \n            clearState()         \n            const updatedData = boardData.filter(item => {\n                const lowercaseText = reqData.search.toLowerCase();\n                const lowercaseKeyword = item.subject.toLowerCase();\n                if (lowercaseKeyword.includes(lowercaseText)) {\n                  return item\n                } \n              });\n              console.log(updatedData);\n              setBoardData(updatedData)\n              \n            return false\n        }\n        fetchInstance('/faqData')\n        .then(function (response) {\n        if(response) {\n            if(reqData.categoryId!=='') {\n                const filteredResponse = response.filter(item => item.categoryId === reqData.categoryId);\n                setBoardData(filteredResponse);\n            }else\n            setBoardData(response);\n            setIsFetching(false)\n        }else {\n            setAlertSetting({\n                ...alertSetting,\n                alertTxt: \"Client Error\"\n            })\n            setIsFetching(false)\n        }\n        })\n        .catch(function (error) {\n            console.log('error', error);\n            setAlertSetting({\n                ...alertSetting,\n                alertTxt: \"Server Error\"\n            })\n        }); \n    }\n\n    const getDetail = (id) =>{\n\n        const formData = new FormData();\n\n        formData.append('faqId',id)\n        console.log(boardData)\n       \n        \n        fetchInstance('/faqDetail')\n        .then(function (response){\n            for(let i=0; i<response.length; i++) {\n                if(id===response[i].faqId) {\n                    console.log(response,id)\n                    setSelectedList(response[i])\n                }\n            }\n            // if(resData.code===200) {\n            //     let data = resData.result\n            //     setSelectedList(data)\n            // }else {\n            //     console.log(resData)\n            // }\n        })\n        .catch(function(error) {\n            console.log('error',error)\n        })\n    }\n\n    const [categoryLists, setCategoryLists] = useState([])\n\n    const getCategory = () =>{\n     \n        fetchInstance('/faqCategory')\n        .then(function (response){\n            // 실제 API 연동시 status로 네트워크 연결 상태 확인\n            if(response) {\n                setCategoryLists(response)\n            }else {\n                setAlertSetting({\n                    ...alertSetting,\n                    alertTxt: \"Client Error\"\n                })\n            }\n        })\n        .catch(function(error) {\n            console.log('error',error)\n            setAlertSetting({\n                ...alertSetting,\n                alertTxt: \"Server Error\"\n            })\n        })\n    }\n\n    /** Comment handling */\n    const [commentPage, setCommentPage] = useState(1)\n    const [commentList, setCommentList] = useState([]);\n    const [comment, setComment] = useState('')\n    const [subComment, setSubComment] = useState('');\n\n    const getComment =() =>{\n        const formData = new FormData();\n        \n        formData.append('page', commentPage);\n        formData.append('faqId', selectedList.faqId);\n\n        // config.data = formData\n\n        if(selectedList.faqId==='') {\n            return false\n        }\n        fetchInstance('/faqComment')\n        .then(function (response){\n            if(response) {\n                let data = [];\n                for (let i = 0; i < response.length; i++) {\n                    if (response[i].faqId === selectedList.faqId) {\n                      data = response[i].commentList;\n                      break; \n                    }\n                  }\n                if(data) {\n                    data.map(d=>{\n                        d.openSubComment = false\n                        d.isInput = false\n                    }\n                    )\n                    setCommentList(data)\n                }\n            }else {\n                setAlertSetting({\n                    ...alertSetting,\n                    alertTxt: \"Client Error\"\n                   })\n            }\n        })\n        .catch(function(error) {\n           console.log(error)\n           setAlertSetting({\n            ...alertSetting,\n            alertTxt: \"Server Error\"\n           })\n        })\n    }\n    const openCommentInput = (idx) =>{\n        console.log('openCommentInput')\n        let copylist = [...commentList];\n        for(let i=0; i<copylist.length; i++) {\n            copylist[i].isInput = false;\n        }\n        copylist[idx].isInput = !copylist[idx].isInput\n        setCommentList(copylist)\n    }\n    const openSubcomment = (e,idx,id) =>{\n        let copyList = [...commentList]\n        copyList[idx].openSubComment = !copyList[idx].openSubComment\n        setCommentList(copyList)\n    }\n    const onAddComment =(depth, id) => {\n    // depth = upper 댓글, num = lower 대댓글\n    if(depth==='upper' && comment==='') {\n        onConfirmHandler('no-input')\n        return false\n    }\n    else if(depth==='lower' &&subComment==='') {\n        onConfirmHandler('no-input')\n        return false\n    }\n\n    let newObj = {};\n\n    newObj.faqId =id;\n    if(depth==='upper') {\n        newObj.commentList = [\n            {\n                commentId: 'new_comment_id', // 새 댓글의 고유 ID\n                writerID: user.id,   // 작성자 ID\n                writerName: user.name, // 작성자 이름\n                createdAt: moment().format('YYYY.MM.DD HH:mm:ss'), // 작성 시간\n                content: comment, // 댓글 내용\n                subComment: [], \n            }\n        ];\n    }\n    if(depth==='lower') {\n        newObj.commentId = id;\n        newObj.content = subComment;\n    }\n    console.log(newObj)\n        var config = {\n            method: 'post',\n            headers: { \n                \"Content-Type\": \"application/json\"\n                // 'Authorization': 'Bearer ' + process.env.REACT_APP_TEMP_JWT_LGEKR,\n            },\n            body: JSON.stringify(newObj)\n            };\n\n        fetchInstance('/faqComment', config)\n        .then(function (response){\n            if(response) {\n                // onConfirmHandler(6)\n                depth === 'upper' ? setComment('') : setSubComment('')\n                getDetail(id);\n                getComment()\n                \n            }else {\n                setAlertSetting({\n                    ...alertSetting,\n                    alertTxt: \"Client Error\"\n                })\n            }\n        })\n        .catch(function(error) {\n            console.log('error',error)\n            setAlertSetting({\n                ...alertSetting,\n                alertTxt: \"Server Error\"\n            })\n        })  \n    }\n    const onDeleteComment = (id) =>{\n        // num = 1 댓글, num = 2 대댓글\n        const formData = new FormData();\n\n        formData.append('commentId', id);\n        \n        config.data=formData\n        // fetchInstance('/faq/commentDelete', config)\n        // .then(function (response){\n        //     let resData = response.data;\n        //     if(resData.code===200) {\n        //         setAlertSetting({\n        //             ...alertSetting,\n        //             alertTxt : \"You've deleted comment.\",\n        //             isDoubleBtn : false,\n        //             btnTxt : 'Close',\n        //         })\n        //         getDetail(selectedList.faqId);\n        //         getComment()\n        //         getList()\n        //     }else {\n        //         console.log(resData,'resData')\n        //     }\n        // })\n        // .catch(function(error) {\n        //     console.log('error',error)\n        // })                  \n    }\n    const [maximizing, setMaxmizing] = useState(false)\n   \n    \n   \n    // 페이지 번호 변경시 요청데이터 페이지 변화ㅣ\n    useEffect(()=>{\n        setReqData({\n            ...reqData,\n            page: activePage\n        })\n    },[activePage])\n   \n    /** detail loading animation */\n    const [isLoading, setIsLoading] = useState(false)\n    const [isLoadingComment, setIsLoadingComment] = useState(false)\n    \n    const [fileStore, setFileStore] = useState([])\n\n     useEffect(()=>{\n\n        setFileStore([])\n        if(selectedList.attachments!=='' && selectedList.attachments!==undefined) {\n          \n            const jsonString = JSON.parse(selectedList.attachments);\n            if(jsonString!==null) {\n                let copy = [...jsonString]\n                setFileStore(copy)\n            }\n        }\n        if(selectedList) {\n            getComment();\n            setIsLoading(true)\n            setCommentPage(1)\n            const timeoutId = setTimeout(() => {\n                setIsLoading(false);\n              }, 500); // 3초 후에 isVisible 값을 false로 변경\n          \n              return () => clearTimeout(timeoutId)\n        }\n    },[selectedList.faqId])\n\n    useEffect(()=>{\n        setIsLoadingComment(true)\n        const timeoutId = setTimeout(() => {\n            setIsLoadingComment(false);\n            }, 500); // 3초 후에 isVisible 값을 false로 변경\n        \n            return () => clearTimeout(timeoutId)\n    },[commentPage])\n    \n\n    useEffect(()=>{\n    getCategory()\n    },[])\n    // page, category클릭시 리스트 재호출\n    useEffect(()=>{\n    getList()\n    },[reqData.page, reqData.categoryId])\n\n    useEffect(()=>{\n    if(boardData.length===0) {\n        setBoardLength(0)\n    }\n    else {\n    let max = boardLength;\n    if(activePage===1) {\n        max = 0\n        boardData.map((item) =>{\n            if(item.rn>max) {\n                max = item.rn;\n            }\n            setBoardLength(max)\n        })\n    }\n    }\n    \n    },[boardData])\n\n    // 리스트 중 상세보기 클릭시 해당 글에 포함된 댓글 호출 API\n    useEffect(()=>{\n    if(selectedList) {\n        getComment()\n    }\n    },[commentPage])\n\n     /** 알림창 ▼ ============================================================= */\n\n     useEffect(()=>{\n        if(!alertModal) {\n           setAlertSetting({\n            alertTxt : '',\n            onConfirm : function() {},\n            isDoubleBtn : false,\n            btnTxt : 'Close',\n            confirmTxt : ''\n           })\n        }\n    },[alertModal])\n    \n    useEffect(()=>{\n        if(alertSetting.alertTxt!==''){\n            setAlertModal(true)\n        }else {\n            setAlertModal(false)\n        }\n    },[alertSetting])\n\n    /** 알림창 ▲ ============================================================= */\n\n     /** 경고창 ▼ ============================================================= */\n     const [warningModal, setWarningModal] = useState(false)\n     const [warningTxt, setWarningTxt] = useState('')\n\n     useEffect(()=>{\n         if(warningTxt!=='') {\n             setWarningModal(true)\n         }\n     },[warningTxt])\n\n     useEffect(()=>{\n         if(!warningModal) {\n             setWarningTxt('')\n         }\n     },[warningModal])\n\n      /** 경고창 ▲ ============================================================= */\n\n    useEffect(()=>{\n    if(selectedList.faqId==='') {\n        setOpenRight(false)\n    }else if(selectedList.faqId!=='' && !isFrequent){\n        setOpenRight(true)\n    }\n    },[selectedList.faqId])\n\n    /** 모달창 실행시 외부 스크롤 방지 */\n    useEffect(()=>{\n        const elem = document.querySelector('html')\n        console.log(elem)\n        if(maximizing) {\n            elem.style.overflow='hidden';\n        }else {\n            elem.style.overflow='';\n        }\n    },[maximizing])\n\n    return (\n        <>\n        \n       \n        <Style detail={selectedList?.faqId} openright={openRight}>\n        <div className=\"inner-container\">\n            <Top searchArea={true} auth={ auth=== 1 ? true : false} onChange={(e)=>setReqData({...reqData, search:e.target.value})} onClick={getList}/>\n            {/** Top Area */}\n            <div className=\"faq-nav\">\n                <div className=\"faq-lists-wrapper\">\n                    <ul className=\"faq-lists custom-justify-between\">\n                        { frequentList && frequentList.length > 0 && frequentList .map((item, idx)=>{\n                            return (\n                                <li key={generateRandomString(idx)} onClick={(e)=>(handleClickRow(e,item), setMaxmizing(true), setIsFrequent(true))}>\n                                    <div className=\"faq-top\">\n                                        <p className=\"faq-number\" style={item.num !== 0 ? {marginRight:'10px'} : null}>{item.num!==0 && `Q.${String(idx+1).padStart(3, '0')}`}</p>\n                                        <p className=\"faq-title\">{`[${item.categoryName}]`}</p>\n                                    </div>\n                                    <div className=\"faq-summary\">{item.subject.slice(0,70)}</div>\n                                </li>\n                            )\n                        })} \n                    </ul>\n                </div>\n                <div className=\"faq-category\">\n                    <ul className=\"faq-category-lists custom-justify-center\">\n                        {\n                            categoryLists?.map((item,idx)=>{\n                                return(\n                                    <li className={`scroll-lists cursor-btn ${reqData.categoryId===item.categoryId?'hover-selected':''}`} key={generateRandomString(idx+1)} onClick={(e) => handleClickIcon(e, item)} >\n                                        {/* 서버로 이미지 호출시 하기처럼\n                                         <div className=\"faq-img-wrapper\"><img src={process.env.REACT_APP_DOWN_URL+'/'+item.categoryIconPath} alt='category-icon'/></div> */}\n                                         <div className=\"faq-img-wrapper\"><img src={item.categoryIconPath} alt='category-icon'/></div>\n                                        <p>{item.categoryNm}</p>\n                                    </li>\n                                )\n                            })\n                        }\n                    </ul>\n                        {/* {categoryLists.map(item => {\n                            return item.iconModal && <IconModal items={item.subCategory} position={hoveredItemPosition} onMouseLeave={()=>handleMouseLeave(item)} isSubCategory={item.subCategory.length!==0 ? true : false}/>;\n                        })} */}\n                </div>\n            </div>\n\n            {/** Content Area */}\n            <div className=\"faq-contents\">\n                <div className=\"faq-left\">\n                    <div>\n                    <ul className=\"board-table custom-align-item custom-flex-item custom-sticky-area\">\n                        <li className=\"col-1\">No.</li>\n                        <li className={`col-2 ${openRight && 'custom-hide-item'}`}>Category</li>\n                        <li className=\"col-3\">Title</li>\n                        <li className={`col-4 ${openRight && 'custom-hide-item'}`}>Writer</li>\n                        <li className={`col-5 ${openRight && 'custom-hide-item'}`}>Recommand</li>\n                        <li className=\"col-6\">Count</li>\n                        <li className=\"col-7\">Date</li>\n                    </ul>\n                        {\n                            boardData && boardData.length > 0 && boardData.map((item,idx)=>{\n                                return(\n                                   <div className=\"board-list custom-flex-item custom-align-item cursor-btn\" key={generateRandomString(idx)} onClick={(e)=>handleClickRow(e,item)} >\n                                        <ul className=\"col-1\">\n                                            <li  id={`list-item-${idx+1}`}>\n                                                <span>{String(item.rn).padStart(3, '0')}</span>\n                                            </li>\n                                        </ul>\n                                        <ul className={`col-2 ${openRight && 'custom-hide-item'}`}>\n                                            <li  id={`list-item-${idx+1}`}>\n                                                <span>{item.categoryTree?.slice(0,15)} {item?.categoryTree?.length>10 && '....'}</span>\n                                            </li>\n                                        </ul>\n                                        <ul className=\"col-3\" >\n                                            <li id={`list-item-${idx+1}`}>\n                                                <span className=\"board-max-length\">{!openRight ? item?.subject.slice(0,82) : item?.subject.slice(0,60)}{!openRight ? item.subject?.length > 82 && '...' : item.subject?.length >60 && '...'}</span><img src={moment(item?.createdAt).format('YYYY-MM-DD HH:mm:ss') > now ? New : null} />\n                                                 {/* <div className={`small-detail custom-flex-item ${!openRight ? 'custom-hide-item' : ''}`}>\n                                                 <span>{item?.writerName}</span>\n                                                    <img src={Like} alt=\"like-img\"/><span className=\"custom-self-align\">{item?.likeCount}</span>\n                                                 </div> */}\n                                                    \n                                            </li>\n                                        </ul>\n                                        <ul className={`col-4 ${openRight && 'custom-hide-item'}`}>\n                                            <li  id={`list-item-${idx+1}`}>\n                                                <span>{item?.writerName?.slice(0,10)}{item?.writerName.length >= 10 && '...'}</span>\n                                            </li>\n                                        </ul>\n                                        <ul className={`col-5 ${openRight && 'custom-hide-item'}`}>\n                                            <li  id={`list-item-${idx+1}`}>\n                                                <img src={Like} alt=\"like-img\"/><span>{item?.likeCount}</span>\n                                            </li>\n                                        </ul>\n                                        <ul className=\"col-6\">\n                                            <li  id={`list-item-${idx+1}`}>\n                                                <span>{item?.hits}</span>\n                                            </li>\n                                        </ul>\n                                        <ul className=\"col-7\">\n                                            <li  id={`list-item-${idx+1}`}>\n                                                <span>{moment(item?.createdAt).format('MM.DD.YY')}</span>\n                                            </li>\n                                        </ul>\n                                   </div>\n                                )\n                            })\n                        }\n                        </div>\n                    {\n                        boardData &&\n                        <Pagination \n                            activePage={activePage} // 현재 페이지\n                            itemsCountPerPage={itemsPerPage} // 한 페이지 당 보여줄 아이템 수\n                            totalItemsCount={boardLength} // 총 아이템 수\n                            pageRangeDisplayed={5} // paginator의 페이지 범위\n                            prevPageText={\"‹\"} // \"이전\"을 나타낼 텍스트\n                            nextPageText={\"›\"} // \"다음\"을 나타낼 텍스트\n                            onChange={(e)=>setPage(e,1)} // 페이지 변경을 핸들링하는 함수\n                        />\n                    }\n                </div>\n                \n               {\n                (selectedList.faqId!=='' && !isFrequent) ?\n\n                <div className=\"editor-wrapper\">\n                <div className={`faq-right ${isLoading ? 'loadingOpacity':''}`} >\n                <div className=\"faq-right-top\">\n                    {/* <img src={Frame} onClick={()=>{setMaxmizing(true)}} className=\"maximizing-btn\"/> */}\n                    <div className=\"custom-flex-item custom-justify-between\">\n                        <button className=\"maximizing-btn\" onClick={()=>{setMaxmizing(true)}}>\n                        <img src={Maximize} alt=\"minimize-btn\"/> Full Screen\n                        </button> \n                        <img className=\"cursor-btn\" src={Close} alt=\"close-btn\" onClick={clearState} />\n                    </div>\n                    <p>{selectedList.subject}</p>\n                    {\n                        fileStore.length!==0 &&\n                        fileStore.map((file,idx)=>{\n                            return(\n                                <div className=\"custom-flex-item\" key={generateRandomString(idx)}>\n                                    <img src={Attachment} alt=\"attachment\"/> \n                                    <span>Attachment</span>\n                                    <span className=\"custom-flex-item faq-attach-down\">\n                                        <span >{`(${idx+1})`}</span><p className=\"custom-hyphen custom-self-align \">-</p><span className=\"faq-attach custom-flex-item cursor-btn\" onClick={()=>setWarningTxt('no download path.')}><p>{file.fileName}</p><img src={Download} alt='download_attachment'/></span>\n                                    </span>\n                                </div> \n                            )\n                        })\n                    }  \n                    \n                </div>\n                <div className=\"faq-right-middle\"><Viewer content={selectedList.content} key={selectedList.faqId}/></div>\n                <div className=\"faq-right-bottom\">\n                    <div className=\"user-action custom-flex-item \">\n                            <span className=\"faq-like custom-flex-item cursor-btn\" onClick={(e)=>onClickAction(e,selectedList.faqId,'LIKE')}><img src={selectedList.reactionState==='LIKE' ? Liked : Like} alt=\"btn_like\"/><p>{selectedList.likeCount}</p></span>   \n                            <span >|</span>\n                            <span className=\"faq-dislike custom-flex-item cursor-btn\" onClick={(e)=>onClickAction(e,selectedList.faqId,'DISLIKE')}><img src={selectedList.reactionState==='DISLIKE' ? Disliked : Dislike} alt='btn_dislike'/><p>{selectedList.dislikeCount}</p></span> \n                    </div> \n                    <div className=\"faq-comment-wrapper\">\n                        <span>Comments</span><span className=\"comment-cnt-title\">total <p className=\"custom-stress-txt comment-cnt\">{selectedList.commentCount}</p></span>\n                        <div className=\"custom-justify-between\">\n                            <div className=\"comment-input\">\n                                <span>Writer : {user.name}</span>\n                                <textarea value={comment} onChange={(e)=>setComment(e.target.value)}/>\n                            </div>\n                            <button onClick={()=>onAddComment('upper',selectedList.faqId)}>Write</button>\n                        </div>\n                    </div>\n                    <div className={`faq-comment-list ${isLoadingComment ? 'halfOpacity':''}`}>\n                        <ul>\n                            {\n                                // commentList.length !==0 &&\n                                 commentList.map((comment,idx)=>{\n                                    return(\n                                        <li key={generateRandomString(idx)}>\n                                            <div className=\"comment-top custom-flex-item custom-justify-between\">\n                                                <div>\n                                                    <span>{comment.writerName}</span>\n                                                    <span>{moment(comment.createdAt).format('MM.DD.YY HH:mm:ss')}</span>\n                                                </div>\n                                                <span className=\"custom-flex-item\">\n                                                {\n                                                            comment.writerID===user.id &&\n                                                            <p className=\"cursor-btn\" onClick={()=>onConfirmHandler('del-comment',comment.commentId)}>Delete</p>\n                                                        }\n                                                         <p className=\"cursor-btn\" onClick={()=>{openCommentInput(idx); setSubComment('')}}>Answer</p>\n                                                </span>\n                                            </div>\n                                            <div className=\"comment-middle\">{comment.content?.slice(0,250)}{comment.content?.length>130 && <span className=\"custom-stress-txt\">...More</span>}</div>\n                                            <div className={comment.openSubComment ? \"comment-bottom\" : \"comment-bottom \"}>\n                                                        \n\n                                                            {\n                                                                comment.subComment.length!==0 &&\n                                                                <div className=\"custom-flex-item cursor-btn\" onClick={(e)=>openSubcomment(e,idx,comment.csTalkId)}>\n                                                                <img src={Comment} alt=\"under-comment\" />\n                                                                <span>Comment</span>\n                                                                <span className=\"custom-stress-txt\">( {comment.subComment.length} ) </span>\n                                                                <img src={comment.openSubComment ? Close_comment : More_comment} alt=\"under-comment\" className=\"toggle-sub-btn\"/>\n                                                                </div>\n                                                            }\n                                                            {\n                                                                comment.openSubComment \n                                                                ?\n                                                                <div >\n                                                                    <ul className=\"submment-wrapper\">\n                                                                       {\n                                                                         comment.subComment.map((sub,idx)=>{\n                                                                            return(\n                                                                                <li key={generateRandomString(idx)}>\n                                                                                    <div className=\"comment-top custom-flex-item custom-justify-between\">\n                                                                                        <div>\n                                                                                            <span>{sub.writerName}</span>\n                                                                                            <span>{moment(sub.createdAt).format('MM.DD.YY')}</span>\n                                                                                        </div>\n                                                                                        <span className=\"custom-flex-item cursor-btn\">\n                                                                                            {sub.writerID===user.id && <p onClick={()=>onConfirmHandler('del-comment',sub.commentId)}>Delete</p>}\n                                                                                            {/* <p>Answer</p> */}\n                                                                                        </span>\n                                                                                    </div>\n                                                                                    <div className=\"comment-middle\">{sub.content?.slice(0,250)}{sub.content?.length>250 && <span className=\"custom-stress-txt\">...More</span>}</div>\n                                                                                </li>\n                                                                            )\n                                                                         })\n                                                                       }\n                                                                    </ul>\n                                                                </div>\n                                                                :\n                                                                null\n                                                            }\n                                                            {\n                                                                comment.isInput &&\n                                                                <div className=\"cstalk-comment-wrapper sub-comment-wrapper\">\n                                                                <div className=\"custom-justify-between\">\n                                                                    <div className=\"comment-input\">\n                                                                        <span>Writer : {user.name}</span>\n                                                                        {/* <textarea value={subComment} onChange={(e)=>console.log(e.target.value)}/> */}\n                                                                        <textarea defaultValue={subComment} onBlur={(e)=>setSubComment(e.target.value)} id={`sub-${comment.commentId}-${idx}`}  />\n                                                                    </div>\n                                                                    <button onClick={()=>onAddComment('lower', comment.commentId)}>Write</button>\n                                                                </div>\n                                                                </div>\n                                                         }\n                                                        {/* ) */}\n                                                    {/* })} */}\n                                                </div>\n\n                                            \n                                        </li>\n                                    )\n                                })\n                            }\n                        </ul>\n                        {\n                            commentList.length!==0 &&\n                            <Pagination \n                            activePage={commentPage} // 현재 페이지\n                            itemsCountPerPage={5} // 한 페이지 당 보여줄 아이템 수\n                            totalItemsCount={selectedList ? selectedList.commentCount : 0} // 총 아이템 수\n                            pageRangeDisplayed={5} // paginator의 페이지 범위\n                            prevPageText={\"‹\"} // \"이전\"을 나타낼 텍스트\n                            nextPageText={\"›\"} // \"다음\"을 나타낼 텍스트\n                            onChange={(e)=>setPage(e,2)} // 페이지 변경을 핸들링하는 함수\n                            />\n                        }\n                    </div>\n                </div>\n               </div>\n            </div>\n            :\n            null\n               }\n                </div>\n                {\n                alertModal\n                &&\n                <Alert alertTxt={alertSetting.alertTxt} onClose={()=>setAlertModal(false)} onConfirm={alertSetting.onConfirm} twoBtn={alertSetting.isDoubleBtn} btnTxt={alertSetting.btnTxt}/>\n            }\n            </div>\n            {\n                maximizing \n                &&\n                <MaximalView data={selectedList} onClose={()=>{setMaxmizing(false); clearState(); setIsFrequent(false)}} onMinimizing={()=> isFrequent ? (setMaxmizing(false), setIsFrequent(!false)) : setMaxmizing(false)} page='faq'/>\n            }\n            {\n                warningModal &&\n                <Warning text={warningTxt} onClose={()=>setWarningModal(false)} />\n            }\n            {\n                isFetching &&\n                <Loading />\n            }\n        </Style>\n        </>\n    )\n}\n\nexport default Faq\n\nconst Style = styled.div`\n    #list-item-${props=>props.detail} {\n        background : #FAF1F4; color : #BB0841; \n    }\n    .faq-left {\n        width: ${props => (props.openright ? '49%' : '100%')};\n    }\n   \n    .col-1 {\n        width: ${props => (props.openright ? '10%' : '5%')};\n    }\n    .col-2 {\n        width: 10%;\n    }\n    .col-3 {\n        width :${props => (props.openright ? '60%' : '50%')};\n    }\n    .col-4 {\n        width: 10%;\n    }\n    .col-5 {\n        width: 10%;\n    }\n    .col-6 {\n        width: ${props => (props.openright ? '15%' : '5%')};\n    }\n    .col-7 {\n        width: ${props => (props.openright ? '15%' : '10%')};\n    }\n    .board-list {\n        padding : ${props => (props.openright ? '17px 30px;':'10px 30px;')}\n      \n    }\n`"],"names":["_jsx","Style","children","className","src","Spinner","alt","styled","div","_templateObject","_taggedTemplateLiteral","user","useContext","UserContext","now","moment","subtract","format","_useState","useState","_useState2","_slicedToArray","activePage","setActivePage","_useState3","itemsPerPage","setPage","e","num","setCommentPage","_useState5","_useState6","boardLength","setBoardLength","_useState7","_useState8","boardData","setBoardData","_useState9","_useState10","frequentList","_useState11","_useState12","isFrequent","setIsFrequent","_useState13","attachments","reactionState","subject","dislikeCount","likeCount","content","subsidiary","writerName","commentCount","hits","createdAt","faqId","categoryId","writerID","_useState14","selectedList","setSelectedList","_useState15","_useState16","openRight","setOpenRight","clearState","_useState17","search","type","page","tab","_useState18","reqData","setReqData","config","method","maxBodyLength","Infinity","headers","data","onClickAction","id","reaction","formData","FormData","yourReaction","oppositeReaction","append","fetchInstance","then","response","resData","_objectSpread2","result","_objectSpread","_defineProperty","console","log","catch","error","handleClickRow","item","getDetail","_useState19","_useState20","alertModal","setAlertModal","_useState21","alertTxt","onConfirm","isDoubleBtn","btnTxt","confirmTxt","_useState22","alertSetting","setAlertSetting","onConfirmHandler","sorting","onDeleteComment","_useState23","_useState24","isFetching","setIsFetching","getList","updatedData","filter","lowercaseText","toLowerCase","includes","filteredResponse","i","length","_useState25","_useState26","categoryLists","setCategoryLists","_useState27","_useState28","commentPage","_useState29","_useState30","commentList","setCommentList","_useState31","_useState32","comment","setComment","_useState33","_useState34","subComment","setSubComment","getComment","map","d","openSubComment","isInput","onAddComment","depth","newObj","commentId","name","body","JSON","stringify","_useState35","_useState36","maximizing","setMaxmizing","useEffect","_useState37","_useState38","isLoading","setIsLoading","_useState39","_useState40","isLoadingComment","setIsLoadingComment","_useState41","_useState42","fileStore","setFileStore","undefined","jsonString","parse","copy","_toConsumableArray","timeoutId","setTimeout","clearTimeout","max","rn","_useState43","_useState44","warningModal","setWarningModal","_useState45","_useState46","warningTxt","setWarningTxt","elem","document","querySelector","style","overflow","_Fragment","_jsxs","detail","openright","Top","searchArea","auth","onChange","target","value","onClick","idx","marginRight","concat","String","padStart","categoryName","slice","generateRandomString","selectedItem","categoryIconPath","categoryNm","_item$categoryTree","_item$categoryTree2","_item$subject","_item$subject2","_item$writerName","categoryTree","New","Like","Pagination","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","prevPageText","nextPageText","Maximize","Close","file","Attachment","fileName","Download","Viewer","Liked","Disliked","Dislike","_comment$content","_comment$content2","copylist","openCommentInput","copyList","openSubcomment","csTalkId","Comment","Close_comment","More_comment","sub","_sub$content","_sub$content2","defaultValue","onBlur","Alert","onClose","twoBtn","MaximalView","onMinimizing","Warning","text","Loading","props"],"sourceRoot":""}