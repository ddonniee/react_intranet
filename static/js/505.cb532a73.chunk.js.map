{"version":3,"file":"static/js/505.cb532a73.chunk.js","mappings":"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","sources":["components/SelectBox.js","_paths.js","assets/svgs/icon_home.svg","components/Top.js","components/AgGrid.js","views/Dashboard/AscHoldingStatus.js"],"sourcesContent":["import React from \"react\";\nimport Select from 'react-select';\n\nconst SelectBox = (props) => {\n    \n    const {options, handleChange, defaultValue, placeholder, minHeight} = props;\n\n    const customStyles = {\n        control: (provided, state) => ({\n            ...provided,\n            borderColor:  state.isSelected ? '#BB0841' : state.isFocused ? '#BB0841' : '#D8D8D8',\n            boxShadow: state.isFocused ? '0 0 0 2px rgba(255, 0, 0, 0.3)' : null,\n            minHeight: '32px',\n            height: minHeight ? '32px' : null,\n        }),\n        option: (provided, state) => ({\n            ...provided,\n            borderColor: state.isSelected ? '#BB0841' : state.isFocused ? '#BB0841' : '#D8D8D8',\n            backgroundColor: state.isSelected ? '#BB0841' : state.isFocused ? '#FAF1F4' : 'white',\n            minHeight: '32px',\n            height: minHeight ? '32px' : null,\n          }),\n    };\n\n    return (\n        <Select \n            className=\"custom-select\"\n            options={options}\n            onChange={handleChange}\n            styles={customStyles}\n            defaultValue={ defaultValue ? defaultValue : null}\n            placeholder={ placeholder ? placeholder : null}\n        />\n    )\n}\n\nexport default SelectBox;","import React from \"react\";\n\nconst _paths = [\n    {\n        name: 'Main',\n        to: '> Support >',\n        path:'/'\n    },\n    {\n        name: 'ASC Holding Status',\n        to: '> Support > Dashboard >',\n        path:'/dashboard/ascholdingstatus'\n    },\n    {\n        name: 'Process & FAQ',\n        to: '> Support > Dashboard >',\n        path : '/process&support/faq'\n    },\n    {\n        name: 'CS Talk',\n        to: '> Support > Board >',\n        path:'/board/cstalk',\n    },\n    {\n        name: 'FAQ Setting',\n        to: '> Support > Setting & Admin >',\n        path:'/setting/faq'\n    },\n    \n]\n\nexport default _paths","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIconHome(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M15.9905 8C15.9905 8.17122 15.9334 8.34245 15.8002 8.47562C15.7622 8.51367 15.7146 8.5327 15.6671 8.56124C15.4197 8.92271 15.0583 9.33175 14.6587 9.33175H13.9929V14.6683C13.9929 15.4007 13.3936 16 12.6611 16H3.32937C2.59691 16 1.99762 15.4007 1.99762 14.6683V9.33175H1.33175C0.608799 9.33175 0.0285375 8.75149 0 8.03805C0 8.02854 0 8.01902 0 8.00951C0 7.8478 0.0665874 7.68609 0.19025 7.56243L7.45779 0.285375C7.45779 0.285375 7.49584 0.218787 7.52438 0.19025C7.64804 0.0570749 7.82878 0 8 0C8.17122 0 8.34245 0.0570749 8.47562 0.19025C8.50416 0.218787 8.51367 0.256837 8.54221 0.285375L15.8098 7.55291C15.9334 7.67658 15.9905 7.83829 16 8H15.9905ZM7.32461 14.6683H8.65636V11.3389H7.32461V14.6683ZM7.99049 1.58859L1.58859 8H3.32937V14.6683H5.99287V10.6635C5.99287 10.2925 6.28775 9.99762 6.65874 9.99762H9.32224C9.69322 9.99762 9.98811 10.2925 9.98811 10.6635V14.6683H12.6516V8H14.4019L8 1.58859H7.99049Z\",\n    fill: \"#33355C\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconHome);\nexport default __webpack_public_path__ + \"static/media/icon_home.7bd0665aef435998d5520ed54df43486.svg\";\nexport { ForwardRef as ReactComponent };","import React , {useEffect,useState} from \"react\";\nimport { useLocation } from 'react-router-dom'\nimport _paths from \"../_paths\";\n\nimport SelectBox from \"./SelectBox\";\n\n// icon\nimport Search from '../assets/svgs/icon_seeking.svg'\nimport Home from '../assets/svgs/icon_home.svg'\nimport { ReactComponent as SearchIcon } from '../assets/svgs/icon_seeking.svg';\n/**\n * \n * @param {\n * auth : 권한체크하여 search 영역 보여줌, \n * options : searchArea true시 select 박스에 들어가는 옵션, \n * handleChange : select시 일어나는 event, \n * searchArea (boolean) : true 시 options와 handleChange 콜백함수 전달 필수\n * } props \n * @returns \n */\nconst Top = props =>{\n    \n    const {auth, options, handleChange, searchArea, onChange, onClick} = props;\n    const [title, setTitle] = useState('');\n\n    const location = useLocation();\n    \n    const [pagePath, setPagePath] = useState('');\n\n    // console.log(props, 'TOP')\n    useEffect(() => {\n        const currentPath = location.pathname;\n        const matchingPath = _paths.find((path) => path.path === currentPath);\n        if (matchingPath) {\n        setPagePath(matchingPath.to);\n        setTitle(matchingPath.name)\n        } else {\n        setPagePath('');\n        }\n    }, [location]);\n            \n    return(\n\n        <div className={`title-wrapper${ title === 'Main' ? ' title-main-wrapper' : searchArea ? ' title-board-wrapper' : ''}`}>\n            <div className=\"title-inner\">\n            \n            {\n                title === 'Main'\n                ? null\n                :\n                <div className={`page-title-area ${!searchArea ? 'custom-txt-align' : ''}`} style={!auth ? {textAlign:'center'}:null}>{title}</div>\n            }\n            </div>\n\n            <div className={`path-inner${searchArea ? ' path-column' : ''}`}>\n                <div className=\"page-path-area\">\n                    <img src={Home} alt='home'/>{pagePath} <p className=\"bold-title\">{title}</p>\n                </div>\n                {\n                    ( auth && searchArea ) \n                    ?\n                    <div className=\"title-nav\">\n                        <div className=\"custom-flex-item custom-align-item\">\n                            <p>· Search</p>\n                            <input type=\"text\" className=\"title-nav-input\" id=\"title-nav-input\" onChange={onChange}></input>\n                            <button className=\"title-nav-btn custom-flex-item custom-align-item\" onClick={onClick}> <SearchIcon /> </button>\n                        </div>\n                    </div>\n                    : \n                    null\n                }\n            </div>\n        </div>\n    )\n}\nexport default Top;","import React, { useState, useRef, useEffect, useMemo, useCallback, useLayoutEffect } from 'react';\nimport { AgGridReact } from 'ag-grid-react'; // the AG Grid React Component\nimport Pagination from \"react-js-pagination\";\n\nimport $ from 'jquery';\n\nimport '../scss/style.scss';\nimport 'ag-grid-community/styles/ag-grid.css'; // Core grid CSS, always needed\nimport 'ag-grid-community/styles/ag-theme-alpine.css'; // Optional theme CSS\nimport 'ag-grid-community';\n\n/**\n *  작성자 : 이은정\n *  작성일 : 2023.09.06\n *  기능 : 테이블 그리드 생성\n * @param {\n * data : 행 데이터\n * column : 컬럼명\n * paging : 페이징 여부 true/false\n * }\n * @returns\n*/\nconst AgGrid = ({data, column, paging, checkbox, checkedItems, changeValue, isModify, multiple}) => {\n\n    const gridRef = useRef(); // Optional - for accessing Grid's API\n    const [rowData, setRowData] = useState(); // Set rowData to Array of Objects, one Object per Row\n    const [columnDefs, setColumnDefs] = useState(column);\n    const [isMultiple, setIsMultiple] = useState(multiple); // row 다중선택여부\n\n    /** 페이징 관련 ▼ ============================================================= */\n    const [activePage, setActivePage] = useState(1); // 현재 페이지\n    const [itemsPerPage] = useState(10); // 페이지당 아이템 갯수\n    const [isCheckBox, setIsCheckbox] = useState(checkbox); // check box 사용할 시 cell click 막기\n\n    const setPage = (e) => {\n        setActivePage(e);\n        console.log('page ---->', e);\n        gridRef.current.api.paginationGoToPage(e);\n    };\n    /** 페이징 관련 ▲ ============================================================= */\n\n    /** Checkbox 관련 ▲ ============================================================= */\n    const [checkedList, setCheckedList] = useState([]);\n    /** Checkbox 관련 ▲ ============================================================= */\n\n    // 데이터, 컬럼명 설정\n    useLayoutEffect(() => {\n        setRowData(data)\n        setColumnDefs(column)\n        \n        if(isModify) {\n            setColumnDefs((prevCol) =>\n                prevCol.map((col) => {\n                    return {...col, editable: true};\n                })\n            )\n        } else {\n            setColumnDefs((prevCol) =>\n                prevCol.map((col) => {\n                    return {...col, editable: false};\n                })\n            )\n        }\n    }, [data, isModify]);\n\n    \n  useEffect(() => {\n    setRowData(data);\n    \n    const updatedColumns = column.map((col) => ({\n      ...col,\n      editable: col.editable ? true : false\n    }));\n    \n    setColumnDefs(updatedColumns);\n  }, [data, column]);\n  \n\n    const onGridReady = useCallback((params) => {\n        setRowData(data)\n        setColumnDefs(column)\n        gridRef.current.api.sizeColumnsToFit();\n    }, []);\n\n    const defaultColDef = useMemo(()=> ({\n        editable: false,\n        sortable: true,\n        // resizable: true,\n        // filter: false,\n        flex: 1,\n        \n    }));\n\n    // Example > 그리드 클릭 시 row값 콘솔 출력\n    // const cellClickedListener = useCallback( e => {\n    //     console.log('cellClicked', e);\n    // }, []);\n\n    const cellClickedListener =  e => {\n        let selectedData=e.data;\n        checkedItems && checkedItems(selectedData);\n        data && changeValue(data)\n        // const selectedNodes = e.api.getSelectedNodes();\n        // const selectedData = selectedNodes.map((node) => node.data);\n    }; \n    // 그리드 기본 높이 컨텐츠 길이에 맞게 동적으로 설정\n    /*\n        개별적인 높이 고정(px)이 필요할 경우 화면별 css에 추가\n        .ag-theme-alpine {    \n            height: 267px !important;\n        }\n    */\n    useEffect(() => {\n        calculateGridHeight();\n        window.addEventListener('resize', calculateGridHeight);\n        return () => {\n            window.removeEventListener('resize', calculateGridHeight);\n        };\n    }, []);\n\n    const calculateGridHeight = () => {\n        // const contentHeight = (data?.length + 1.65) * 44; // 행 높이 승수 조정 (한 행의 높이 42px)\n        const contentHeight = (data?.length + 1) * 44;\n        const gridContainer = document.querySelector('.ag-theme-alpine');\n        if (gridContainer) {\n            gridContainer.style.height = `${contentHeight}px`; // calc(100% + 17px);\n        }\n    };\n\n    const handleSelectBox = useCallback((event) => {\n        const selectedNodes = event.api.getSelectedNodes();\n        const selectedData = selectedNodes.map((node) => node.data);\n        \n        checkedItems(selectedData);\n      }, [checkedItems]);\n\n      const handleCellValueChanged = params =>{\n      \n        const {data} = params;\n        console.log(params,'ehandleCellValueChanged')\n        // changeValue((prev=>prev.map(item=>item.'id===data.id ? data:item)))\n      }\n    \n    useEffect(()=>{\n        if(checkbox) {\n            setIsCheckbox(true)\n        }else if(!checkbox) {\n            setIsCheckbox(false)\n        }\n    },[])\n\n  \n    return (\n        <div>\n          {\n            data && (\n            <>\n            {/* ag-grid */} \n            <div className=\"ag-theme-alpine\">\n                <AgGridReact \n                    ref={gridRef} // Ref for accessing Grid's API \n                    rowData={rowData} // Row Data for Rows \n                    columnDefs={columnDefs} // Column Defs for Columns \n                    defaultColDef={defaultColDef} // Default Column Properties \n                    animateRows={true} // Optional - set to 'true' to have rows animate when sorted\n                    rowSelection={isMultiple ? 'multiple' : 'single'} // Options - allows click selection of rows \n                    onCellClicked={cellClickedListener} // Optional - registering for Grid Event \n                    pagination={paging ? true : false}\n                    paginationPageSize={10}\n                    suppressPaginationPanel={true}\n                    suppressScrollOnNewData={true}\n                    suppressRowClickSelection={true}\n                    suppressRowTransform={true}\n                    suppressClickEdit={false}\n                    onGridReady={onGridReady}\n                    onSelectionChanged={handleSelectBox}\n                    suppressCellFocus={isModify ? false : true}\n                    onCellValueChanged={handleCellValueChanged}\n                    // editType=\"fullRow\"\n                    // singleClickEdit={true}\n                    \n                    \n                />\n            </div>\n            {/* react-js-pagination */}\n            {paging ?\n            <Pagination\n                activePage={activePage} // 현재 페이지\n                itemsCountPerPage={itemsPerPage} // 한 페이지 당 보여줄 아이템 수\n                totalItemsCount={data?.length} // 총 아이템 수\n                pageRangeDisplayed={5} // paginator의 페이지 범위\n                prevPageText={\"‹\"} // \"이전\"을 나타낼 텍스트\n                nextPageText={\"›\"} // \"다음\"을 나타낼 텍스트\n                onChange={setPage} // 페이지 변경을 핸들링하는 함수\n            />\n            : null\n            }\n            </>\n          )}\n        </div>\n      );\n};\n\nexport default AgGrid;\n","import { useContext, useEffect, useState } from \"react\"\nimport { fetchInstance } from \"../../utils/CommonFunction\"\n\nimport AgGrid from \"../../components/AgGrid\"\nimport Top from \"../../components/Top\"\nimport Alert from \"../../components/Alert\";\n\nfunction AscHoldingStatus() {\n\n    const [column, setColumn] = useState([ // 컬럼 값 설정\n        { \n            headerName: 'No',\n            field: 'no',\n            resizable: false,\n            maxWidth: 50\n        },\n        { \n            headerName: 'Hold Reason',\n            field: 'reason',\n            resizable: false,\n            minWidth : 300\n        },\n        { \n            headerName: 'Division',\n            field: 'division',\n            resizable: false,\n        },\n        { \n            headerName: 'Responsibility to',\n            field: 'staff',\n            resizable: false,\n        },\n        { \n            headerName: 'Due date',\n            field: 'dueDate',\n            resizable: false,\n        },\n        { \n            headerName: 'Pending date',\n            field: 'pendingDate',\n            resizable: false,\n        },\n    ]);\n\n    const [isFetching, setIsFetching] = useState(false)\n    const [rowData, setRowData] = useState([])\n\n    const getList = () =>{\n        setIsFetching(true)\n        fetchInstance('/ascData')\n        .then(function (response){\n            console.log(response)\n            // API 연동시 status객체에 내려오는 코드로 통신확인\n            if(response) {\n                setRowData(response)\n            }else {\n                console.log(response)\n                setAlertSetting({\n                    ...alertSetting,\n                    alertTxt: \"Client Error\"\n                })\n            }\n            setIsFetching(false)\n        })\n        .catch(function(error) {\n            console.log('error',error)\n            setAlertSetting({\n                ...alertSetting,\n                alertTxt: \"Server Error\"\n            })\n            setIsFetching(false)\n        })\n    }\n\n    /** Alert Handler Start */\n    const [alertModal, setAlertModal] = useState(false)\n    const [alertSetting, setAlertSetting] = useState({\n        alertTxt : '',\n        onConfirm : function() {},\n        isDoubleBtn : false,\n        btnTxt : 'Close',\n        confirmTxt : ''\n    })\n\n    useEffect(()=>{\n        if(!alertModal) {\n           setAlertSetting({\n            alertTxt : '',\n            onConfirm : function() {},\n            isDoubleBtn : false,\n            btnTxt : 'Close',\n            confirmTxt : ''\n           })\n        }\n    },[alertModal])\n    \n    useEffect(()=>{\n        if(alertSetting.alertTxt!==''){\n            setAlertModal(true)\n        }else {\n            setAlertModal(false)\n        }\n    },[alertSetting])\n\n     /** Alert Handler End */\n\n    useEffect(()=>{\n        getList()\n    },[])\n    return (\n        <>\n        <div className=\"inner-container\">\n            <Top auth={1} searchArea={false}/>\n            <div className='user-content'>\n                    {\n                        rowData.length !== 0 &&\n                        <div className='grid'>\n                        <AgGrid data={rowData} column={column} paging={false} changeValue={setRowData} />\n                    </div>\n                    }\n                </div>\n                {\n                    alertModal &&\n                    <Alert alertTxt={alertSetting.alertTxt} onClose={()=>setAlertModal(false)} onConfirm={alertSetting.onConfirm} twoBtn={alertSetting.isDoubleBtn} btnTxt={alertSetting.btnTxt}/>\n                }\n        </div>\n        </>\n    )\n}\n\nexport default AscHoldingStatus"],"names":["props","options","handleChange","defaultValue","placeholder","minHeight","customStyles","control","provided","state","_objectSpread","borderColor","isSelected","isFocused","boxShadow","height","option","backgroundColor","_jsx","Select","className","onChange","styles","name","to","path","auth","searchArea","onClick","_useState","useState","_useState2","_slicedToArray","title","setTitle","location","useLocation","_useState3","_useState4","pagePath","setPagePath","useEffect","currentPath","pathname","matchingPath","_paths","find","_jsxs","concat","children","style","textAlign","src","Home","alt","type","id","SearchIcon","_ref","data","column","paging","checkbox","checkedItems","changeValue","isModify","multiple","gridRef","useRef","rowData","setRowData","columnDefs","setColumnDefs","_useState5","_useState6","isMultiple","_useState7","_useState8","activePage","setActivePage","_useState9","itemsPerPage","_useState11","_useState12","setIsCheckbox","_useState13","_useState14","useLayoutEffect","prevCol","map","col","editable","updatedColumns","onGridReady","useCallback","params","current","api","sizeColumnsToFit","defaultColDef","useMemo","sortable","flex","calculateGridHeight","window","addEventListener","removeEventListener","contentHeight","length","gridContainer","document","querySelector","handleSelectBox","event","selectedData","getSelectedNodes","node","_Fragment","AgGridReact","ref","animateRows","rowSelection","onCellClicked","e","pagination","paginationPageSize","suppressPaginationPanel","suppressScrollOnNewData","suppressRowClickSelection","suppressRowTransform","suppressClickEdit","onSelectionChanged","suppressCellFocus","onCellValueChanged","console","log","Pagination","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","prevPageText","nextPageText","paginationGoToPage","headerName","field","resizable","maxWidth","minWidth","setIsFetching","alertModal","setAlertModal","alertTxt","onConfirm","isDoubleBtn","btnTxt","confirmTxt","_useState10","alertSetting","setAlertSetting","fetchInstance","then","response","catch","error","Top","AgGrid","Alert","onClose","twoBtn"],"sourceRoot":""}